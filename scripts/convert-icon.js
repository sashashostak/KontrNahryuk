const sharp = require('sharp');
const fs = require('fs');
const path = require('path');

async function convertSvgToIco() {
    try {
        console.log('üîÑ –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü—ñ—è SVG –≤ ICO...');
        
        // –ß–∏—Ç–∞—î–º–æ SVG —Ñ–∞–π–ª
        const svgPath = path.join(__dirname, '../build/pig-icon.svg');
        const icoPath = path.join(__dirname, '../build/icon.ico');
        
        // –ö–æ–Ω–≤–µ—Ä—Ç—É—î–º–æ SVG –≤ PNG 256x256, –ø–æ—Ç—ñ–º –≤ ICO
        await sharp(svgPath)
            .resize(256, 256)
            .png()
            .toFile(path.join(__dirname, '../build/icon-256.png'));
            
        console.log('‚úÖ PNG —Ñ–∞–π–ª —Å—Ç–≤–æ—Ä–µ–Ω–æ');
        
        // –°—Ç–≤–æ—Ä—é—î–º–æ —Ä—ñ–∑–Ω—ñ —Ä–æ–∑–º—ñ—Ä–∏ –¥–ª—è ICO
        const sizes = [16, 32, 48, 64, 128, 256];
        
        for (const size of sizes) {
            await sharp(svgPath)
                .resize(size, size)
                .png()
                .toFile(path.join(__dirname, `../build/icon-${size}.png`));
        }
        
        console.log('‚úÖ –í—Å—ñ —Ä–æ–∑–º—ñ—Ä–∏ —Å—Ç–≤–æ—Ä–µ–Ω–æ');
        console.log('üìù –¢–µ–ø–µ—Ä –ø–æ—Ç—Ä—ñ–±–Ω–æ –≤—Ä—É—á–Ω—É —Å—Ç–≤–æ—Ä–∏—Ç–∏ ICO —Ñ–∞–π–ª –∑ PNG —Ñ–∞–π–ª—ñ–≤');
        console.log('üí° –†–µ–∫–æ–º–µ–Ω–¥—É—é –≤–∏–∫–æ—Ä–∏—Å—Ç–∞—Ç–∏ –æ–Ω–ª–∞–π–Ω —Å–µ—Ä–≤—ñ—Å –∞–±–æ ImageMagick');
        
        // –°—Ç–≤–æ—Ä–∏–º–æ –ø—Ä–æ—Å—Ç–∏–π ICO –∑ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ PNG
        await sharp(svgPath)
            .resize(256, 256)
            .png()
            .toFile(icoPath.replace('.ico', '.png'));
            
        console.log('‚úÖ –û—Å–Ω–æ–≤–Ω–∏–π PNG –¥–ª—è ICO –≥–æ—Ç–æ–≤–∏–π');
        
    } catch (error) {
        console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü—ñ—ó:', error);
    }
}

convertSvgToIco();