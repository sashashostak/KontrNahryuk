const { spawn } = require('child_process');
const path = require('path');

async function forceUpdateIcon() {
    try {
        console.log('üîÑ –ü—Ä–∏–º—É—Å–æ–≤–µ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —ñ–∫–æ–Ω–∫–∏ EXE —Ñ–∞–π–ª—É...');
        
        const exePath = path.join(__dirname, '../release/KontrNahryuk-win32-x64/KontrNahryuk.exe');
        const iconPath = path.join(__dirname, '../build/icon.ico');
        const rceditPath = path.join(__dirname, '../node_modules/rcedit/bin/rcedit.exe');
        
        // 1. –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ —ñ–∫–æ–Ω–∫—É –∑ –¥–æ–¥–∞—Ç–∫–æ–≤–∏–º–∏ –≤–µ—Ä—Å—ñ–π–Ω–∏–º–∏ –¥–∞–Ω–Ω–∏–º–∏
        console.log('üê∑ –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ —ñ–∫–æ–Ω–∫—É –∑ –º–µ—Ç–∞–¥–∞–Ω–∏–º–∏...');
        
        const rceditProcess = spawn(rceditPath, [
            exePath,
            '--set-icon', iconPath,
            '--set-version-string', 'CompanyName', 'KontrNahryuk Team',
            '--set-version-string', 'FileDescription', 'Ukrainian Document Processor üê∑',
            '--set-version-string', 'ProductName', 'KontrNahryuk',
            '--set-version-string', 'ProductVersion', '1.1.2',
            '--set-version-string', 'FileVersion', '1.1.2',
            '--set-version-string', 'LegalCopyright', 'Copyright ¬© 2024-2025 KontrNahryuk',
            '--set-version-string', 'OriginalFilename', 'KontrNahryuk.exe'
        ], {
            stdio: 'inherit'
        });
        
        await new Promise((resolve, reject) => {
            rceditProcess.on('close', (code) => {
                if (code === 0) {
                    console.log('‚úÖ –Ü–∫–æ–Ω–∫–∞ —Ç–∞ –º–µ—Ç–∞–¥–∞–Ω—ñ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ñ!');
                    resolve(true);
                } else {
                    console.log(`‚ùå –ü–æ–º–∏–ª–∫–∞ (–∫–æ–¥ ${code})`);
                    reject(new Error(`rcedit failed with code ${code}`));
                }
            });
        });
        
        console.log('üîÑ –û—á–∏—â—É—î–º–æ –∫–µ—à —ñ–∫–æ–Ω–æ–∫ Windows...');
        
        // 2. –û—á–∏—â—É—î–º–æ –∫–µ—à —ñ–∫–æ–Ω–æ–∫
        const commands = [
            'ie4uinit.exe -show',
            'ie4uinit.exe -ClearIconCache',
            'taskkill /f /im explorer.exe',
            'timeout /t 2 /nobreak > nul',
            'start explorer.exe'
        ];
        
        for (const cmd of commands) {
            try {
                console.log(`üîß –í–∏–∫–æ–Ω—É—î–º–æ: ${cmd}`);
                const [command, ...args] = cmd.split(' ');
                
                if (command === 'timeout' || command === 'start') {
                    // –î–ª—è —Ü–∏—Ö –∫–æ–º–∞–Ω–¥ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ shell
                    await new Promise((resolve) => {
                        const proc = spawn('cmd', ['/c', cmd], { stdio: 'inherit' });
                        proc.on('close', () => resolve(true));
                    });
                } else {
                    await new Promise((resolve) => {
                        const proc = spawn(command, args, { stdio: 'inherit' });
                        proc.on('close', () => resolve(true));
                        proc.on('error', () => resolve(true)); // –Ü–≥–Ω–æ—Ä—É—î–º–æ –ø–æ–º–∏–ª–∫–∏
                    });
                }
            } catch (error) {
                console.log(`‚ö†Ô∏è –ö–æ–º–∞–Ω–¥–∞ ${cmd} –Ω–µ –≤–∏–∫–æ–Ω–∞–ª–∞—Å—è, –ø—Ä–æ–¥–æ–≤–∂—É—î–º–æ...`);
            }
        }
        
        console.log('‚úÖ –û–Ω–æ–≤–ª–µ–Ω–Ω—è —ñ–∫–æ–Ω–∫–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');
        console.log('üí° –Ø–∫—â–æ —ñ–∫–æ–Ω–∫–∞ –≤—Å–µ —â–µ –Ω–µ –∑–º—ñ–Ω–∏–ª–∞—Å—è:');
        console.log('   1. –ü–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂—Ç–µ File Explorer');
        console.log('   2. –ê–±–æ –ø–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂—Ç–µ –∫–æ–º–ø\'—é—Ç–µ—Ä');
        console.log('   3. –°–ø—Ä–æ–±—É–π—Ç–µ –≤–∏–¥–∞–ª–∏—Ç–∏ —ñ –∑–∞–Ω–æ–≤–æ —Å–∫–æ–ø—ñ—é–≤–∞—Ç–∏ EXE —Ñ–∞–π–ª');
        
    } catch (error) {
        console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —ñ–∫–æ–Ω–∫–∏:', error);
    }
}

if (require.main === module) {
    forceUpdateIcon();
}