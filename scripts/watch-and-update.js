const fs = require('fs');
const path = require('path');
const { updatePortableVersion } = require('./update-portable.js');

let isUpdating = false;
let updateQueue = false;

async function watchAndUpdate() {
    console.log('üëÄ –í—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è –∑–º—ñ–Ω –≤ –∫–æ–¥—ñ –¥–ª—è –∞–≤—Ç–æ–æ–Ω–æ–≤–ª–µ–Ω–Ω—è Portable –≤–µ—Ä—Å—ñ—ó...');
    
    // –ü–∞–ø–∫–∏ –¥–ª—è –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è
    const watchDirectories = [
        path.join(__dirname, '../src'),
        path.join(__dirname, '../electron'),
        path.join(__dirname, '../build')
    ];
    
    // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ–±—Ä–æ–±–∫–∏ –∑–º—ñ–Ω
    const handleChange = async (eventType, filename) => {
        if (isUpdating) {
            updateQueue = true;
            return;
        }
        
        console.log(`üìù –ó–º—ñ–Ω–∞ –≤–∏—è–≤–ª–µ–Ω–∞: ${filename} (${eventType})`);
        
        // –ó–∞—Ç—Ä–∏–º–∫–∞ –¥–ª—è —É–Ω–∏–∫–Ω–µ–Ω–Ω—è –º–Ω–æ–∂–∏–Ω–Ω–∏—Ö –æ–Ω–æ–≤–ª–µ–Ω—å
        setTimeout(async () => {
            if (updateQueue) {
                updateQueue = false;
                return;
            }
            
            isUpdating = true;
            try {
                console.log('üîÑ –ó–∞–ø—É—Å–∫ –∞–≤—Ç–æ–æ–Ω–æ–≤–ª–µ–Ω–Ω—è Portable –≤–µ—Ä—Å—ñ—ó...');
                await updatePortableVersion();
                console.log('‚úÖ Portable –≤–µ—Ä—Å—ñ—è –æ–Ω–æ–≤–ª–µ–Ω–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ');
            } catch (error) {
                console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –∞–≤—Ç–æ–æ–Ω–æ–≤–ª–µ–Ω–Ω—è:', error);
            } finally {
                isUpdating = false;
                
                // –Ø–∫—â–æ –±—É–ª–∏ –¥–æ–¥–∞—Ç–∫–æ–≤—ñ –∑–º—ñ–Ω–∏ –ø—ñ–¥ —á–∞—Å –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
                if (updateQueue) {
                    updateQueue = false;
                    setTimeout(() => handleChange('change', 'queued'), 1000);
                }
            }
        }, 2000); // 2 —Å–µ–∫—É–Ω–¥–∏ –∑–∞—Ç—Ä–∏–º–∫–∏
    };
    
    // –ù–∞–ª–∞—à—Ç–æ–≤—É—î–º–æ –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è –¥–ª—è –∫–æ–∂–Ω–æ—ó –ø–∞–ø–∫–∏
    watchDirectories.forEach(dir => {
        try {
            fs.watch(dir, { recursive: true }, handleChange);
            console.log(`üëÅÔ∏è –í—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è: ${dir}`);
        } catch (error) {
            console.warn(`‚ö†Ô∏è –ù–µ –≤–¥–∞–ª–æ—Å—è –Ω–∞–ª–∞—à—Ç—É–≤–∞—Ç–∏ –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è –¥–ª—è ${dir}:`, error.message);
        }
    });
    
    console.log('üéØ –ê–≤—Ç–æ–æ–Ω–æ–≤–ª–µ–Ω–Ω—è Portable –≤–µ—Ä—Å—ñ—ó –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω–æ!');
    console.log('üí° –¢–µ–ø–µ—Ä –ø—Ä–∏ –∑–º—ñ–Ω—ñ —Ñ–∞–π–ª—ñ–≤ Portable –≤–µ—Ä—Å—ñ—è –±—É–¥–µ –æ–Ω–æ–≤–ª—é–≤–∞—Ç–∏—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ');
    
    // –ó—Ä–æ–±–∏–º–æ –ø–æ—á–∞—Ç–∫–æ–≤–µ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
    try {
        await updatePortableVersion();
        console.log('üöÄ –ü–æ—á–∞—Ç–∫–æ–≤–µ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –∑–∞–≤–µ—Ä—à–µ–Ω–æ');
    } catch (error) {
        console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –ø–æ—á–∞—Ç–∫–æ–≤–æ–≥–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è:', error);
    }
}

// –ó–∞–ø—É—Å–∫ —è–∫—â–æ —Å–∫—Ä–∏–ø—Ç –≤–∏–∫–ª–∏–∫–∞–Ω–æ –Ω–∞–ø—Ä—è–º—É
if (require.main === module) {
    watchAndUpdate().catch(console.error);
}

module.exports = { watchAndUpdate };