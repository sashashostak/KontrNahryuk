const fs = require('fs').promises;
const path = require('path');
const os = require('os');

async function clearLicenseData() {
    try {
        const appDataPath = path.join(os.homedir(), 'AppData', 'Roaming', 'kontr-nahryuk', 'db.json');
        
        console.log('üóëÔ∏è –û—á–∏—â–µ–Ω–Ω—è –∑–±–µ—Ä–µ–∂–µ–Ω–∏—Ö –¥–∞–Ω–∏—Ö –ª—ñ—Ü–µ–Ω–∑—ñ—ó...');
        console.log('üìÅ –®–ª—è—Ö:', appDataPath);
        
        try {
            const data = await fs.readFile(appDataPath, 'utf8');
            console.log('üìÑ –ü–æ—Ç–æ—á–Ω–∏–π –≤–º—ñ—Å—Ç db.json:');
            console.log(data);
            
            // –û—á–∏—â—É—î–º–æ licenseKey –∞–ª–µ –∑–∞–ª–∏—à–∞—î–º–æ —ñ–Ω—à—ñ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è
            const jsonData = JSON.parse(data);
            if (jsonData.settings && jsonData.settings.licenseKey) {
                delete jsonData.settings.licenseKey;
                console.log('üîë –í–∏–¥–∞–ª—è—î–º–æ licenseKey –∑ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å...');
            } else {
                console.log('‚ö†Ô∏è licenseKey –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –≤ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è—Ö');
            }
            
            await fs.writeFile(appDataPath, JSON.stringify(jsonData, null, 2), 'utf8');
            console.log('‚úÖ –î–∞–Ω—ñ –æ—á–∏—â–µ–Ω–æ, licenseKey –≤–∏–¥–∞–ª–µ–Ω–æ');
            
        } catch (error) {
            if (error.code === 'ENOENT') {
                console.log('‚ö†Ô∏è –§–∞–π–ª db.json –Ω–µ —ñ—Å–Ω—É—î (—Ü–µ –Ω–æ—Ä–º–∞–ª—å–Ω–æ –¥–ª—è –ø–µ—Ä—à–æ–≥–æ –∑–∞–ø—É—Å–∫—É)');
            } else {
                console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ —á–∏—Ç–∞–Ω–Ω—è/–∑–∞–ø–∏—Å—É —Ñ–∞–π–ª—É:', error);
            }
        }
        
    } catch (error) {
        console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –æ—á–∏—â–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö:', error);
    }
}

if (require.main === module) {
    clearLicenseData();
}