/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ–≥–æ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è portable —Ä–µ–ª—ñ–∑—É KontrNahryuk
 * 
 * –ü—Ä–æ—Ü–µ—Å:
 * 1. –ó—á–∏—Ç—É—î –ø–æ—Ç–æ—á–Ω—É –≤–µ—Ä—Å—ñ—é –∑ package.json
 * 2. –ó–∞–ø–∞–∫–æ–≤—É—î –ø–∞–ø–∫—É release/KontrNahryuk-win32-x64 —É ZIP –∞—Ä—Ö—ñ–≤
 * 3. –ù–∞–∑–∏–≤–∞—î –∞—Ä—Ö—ñ–≤: KontrNahryuk-v{version}-portable.zip
 * 4. –ó–±–µ—Ä—ñ–≥–∞—î –∞—Ä—Ö—ñ–≤ —É –∫–æ—Ä–µ–Ω–µ–≤—É –ø–∞–ø–∫—É –ø—Ä–æ–µ–∫—Ç—É
 * 
 * –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è: node scripts/create-portable-release.js
 */

const fs = require('fs');
const path = require('path');
const archiver = require('archiver');

// –ö–æ–ª—å–æ—Ä–æ–≤–∏–π –≤–∏–≤—ñ–¥ –¥–ª—è –∫–æ–Ω—Å–æ–ª—ñ
const colors = {
  reset: '\x1b[0m',
  green: '\x1b[32m',
  blue: '\x1b[34m',
  yellow: '\x1b[33m',
  red: '\x1b[31m',
};

function log(message, color = colors.reset) {
  console.log(`${color}${message}${colors.reset}`);
}

async function createPortableRelease() {
  try {
    // 1. –ó—á–∏—Ç—É—î–º–æ –≤–µ—Ä—Å—ñ—é –∑ package.json
    const packageJson = JSON.parse(fs.readFileSync('package.json', 'utf8'));
    const version = packageJson.version;
    
    log(`\nüöÄ –°—Ç–≤–æ—Ä–µ–Ω–Ω—è portable —Ä–µ–ª—ñ–∑—É KontrNahryuk v${version}`, colors.blue);
    
    // 2. –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ —ñ—Å–Ω—É—î –ø–∞–ø–∫–∞ –∑—ñ–±—Ä–∞–Ω–æ–≥–æ –¥–æ–¥–∞—Ç–∫—É
    const sourcePath = path.join('release', 'KontrNahryuk-win32-x64');
    if (!fs.existsSync(sourcePath)) {
      log('‚ùå –ü–æ–º–∏–ª–∫–∞: –ü–∞–ø–∫–∞ release/KontrNahryuk-win32-x64 –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∞!', colors.red);
      log('   –°–ø–æ—á–∞—Ç–∫—É –∑–∞–ø—É—Å—Ç—ñ—Ç—å: npm run package', colors.yellow);
      process.exit(1);
    }
    
    // 3. –§–æ—Ä–º—É—î–º–æ –Ω–∞–∑–≤—É –∞—Ä—Ö—ñ–≤—É –∑–≥—ñ–¥–Ω–æ –¢–ó: –º–∞—î –º—ñ—Å—Ç–∏—Ç–∏ "portable" —Ç–∞ –∑–∞–∫—ñ–Ω—á—É–≤–∞—Ç–∏—Å—å –Ω–∞ .zip
    const zipName = `KontrNahryuk-v${version}-portable.zip`;
    const outputPath = path.resolve(zipName);
    
    // 4. –í–∏–¥–∞–ª—è—î–º–æ —Å—Ç–∞—Ä–∏–π –∞—Ä—Ö—ñ–≤ —è–∫—â–æ —ñ—Å–Ω—É—î
    if (fs.existsSync(outputPath)) {
      log(`üìÅ –í–∏–¥–∞–ª—è—î–º–æ —Å—Ç–∞—Ä–∏–π –∞—Ä—Ö—ñ–≤: ${zipName}`, colors.yellow);
      fs.unlinkSync(outputPath);
    }
    
    // 5. –°—Ç–≤–æ—Ä—é—î–º–æ –Ω–æ–≤–∏–π –∞—Ä—Ö—ñ–≤
    log(`üì¶ –°—Ç–≤–æ—Ä—é—î–º–æ –∞—Ä—Ö—ñ–≤: ${zipName}`, colors.blue);
    
    const output = fs.createWriteStream(outputPath);
    const archive = archiver('zip', {
      zlib: { level: 9 } // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–µ —Å—Ç–∏—Å–Ω–µ–Ω–Ω—è
    });
    
    // –û–±—Ä–æ–±–∫–∞ –ø–æ–º–∏–ª–æ–∫
    output.on('error', (err) => {
      log(`‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–ø–∏—Å—É —Ñ–∞–π–ª—É: ${err.message}`, colors.red);
      process.exit(1);
    });
    
    archive.on('error', (err) => {
      log(`‚ùå –ü–æ–º–∏–ª–∫–∞ –∞—Ä—Ö—ñ–≤—É–≤–∞–Ω–Ω—è: ${err.message}`, colors.red);
      process.exit(1);
    });
    
    // –í—ñ–¥—Å—Ç–µ–∂—É—î–º–æ –ø—Ä–æ–≥—Ä–µ—Å
    archive.on('progress', (progress) => {
      const percent = ((progress.entries.processed / progress.entries.total) * 100).toFixed(1);
      process.stdout.write(`\r   –ü—Ä–æ–≥—Ä–µ—Å: ${percent}% (${progress.entries.processed}/${progress.entries.total} —Ñ–∞–π–ª—ñ–≤)`);
    });
    
    // –ü–æ–¥—ñ—è –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è
    output.on('close', () => {
      const sizeInMB = (archive.pointer() / 1024 / 1024).toFixed(2);
      log(`\n‚úÖ –†–µ–ª—ñ–∑ —É—Å–ø—ñ—à–Ω–æ —Å—Ç–≤–æ—Ä–µ–Ω–æ!`, colors.green);
      log(`üìä –†–æ–∑–º—ñ—Ä –∞—Ä—Ö—ñ–≤—É: ${sizeInMB} MB`, colors.blue);
      log(`üìÅ –§–∞–π–ª: ${zipName}`, colors.blue);
      log(`\nüìù –ù–∞—Å—Ç—É–ø–Ω—ñ –∫—Ä–æ–∫–∏:`, colors.yellow);
      log(`   1. –ü–µ—Ä–µ–π–¥—ñ—Ç—å –Ω–∞: https://github.com/sashashostak/KontrNahryuk/releases/new`);
      log(`   2. –í—Å—Ç–∞–Ω–æ–≤—ñ—Ç—å —Ç–µ–≥: v${version}`);
      log(`   3. –ó–∞–≤–∞–Ω—Ç–∞–∂—Ç–µ —Ñ–∞–π–ª: ${zipName}`);
      log(`   4. –û–ø—É–±–ª—ñ–∫—É–π—Ç–µ —Ä–µ–ª—ñ–∑`);
    });
    
    // –ü—ñ–¥–∫–ª—é—á–∞—î–º–æ –≤–∏—Ö—ñ–¥–Ω–∏–π –ø–æ—Ç—ñ–∫ –¥–æ –∞—Ä—Ö—ñ–≤–∞—Ç–æ—Ä–∞
    archive.pipe(output);
    
    // –î–æ–¥–∞—î–º–æ –≤—Å—ñ —Ñ–∞–π–ª–∏ –∑ –ø–∞–ø–∫–∏ –¥–æ –∞—Ä—Ö—ñ–≤—É
    // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø–∞–ø–æ–∫: KontrNahryuk-win32-x64/...
    archive.directory(sourcePath, 'KontrNahryuk-win32-x64');
    
    // –ó–∞–≤–µ—Ä—à—É—î–º–æ –∞—Ä—Ö—ñ–≤—É–≤–∞–Ω–Ω—è
    await archive.finalize();
    
  } catch (error) {
    log(`\n‚ùå –ü–æ–º–∏–ª–∫–∞: ${error.message}`, colors.red);
    console.error(error);
    process.exit(1);
  }
}

// –ó–∞–ø—É—Å–∫
createPortableRelease();
