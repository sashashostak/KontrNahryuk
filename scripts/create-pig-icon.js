const sharp = require('sharp');
const toIco = require('to-ico');
const fs = require('fs').promises;
const path = require('path');

async function createIcoFromSvg() {
    try {
        console.log('üê∑ –°—Ç–≤–æ—Ä—é—î–º–æ —ñ–∫–æ–Ω–∫—É —Å–≤–∏–Ω–∫–∏ –¥–ª—è EXE...');
        
        const svgPath = path.join(__dirname, '../build/pig-icon.svg');
        const icoPath = path.join(__dirname, '../build/icon.ico');
        
        // –°—Ç–≤–æ—Ä—é—î–º–æ PNG —Ñ–∞–π–ª–∏ —Ä—ñ–∑–Ω–∏—Ö —Ä–æ–∑–º—ñ—Ä—ñ–≤
        const sizes = [16, 24, 32, 48, 64, 128, 256];
        const pngBuffers = [];
        
        for (const size of sizes) {
            console.log(`üìê –°—Ç–≤–æ—Ä—é—î–º–æ —Ä–æ–∑–º—ñ—Ä ${size}x${size}...`);
            const buffer = await sharp(svgPath)
                .resize(size, size, {
                    kernel: sharp.kernel.lanczos3,
                    fit: 'contain',
                    background: { r: 0, g: 0, b: 0, alpha: 0 }
                })
                .png()
                .toBuffer();
            
            pngBuffers.push(buffer);
        }
        
        console.log('üîÑ –ö–æ–Ω–≤–µ—Ä—Ç—É—î–º–æ PNG –≤ ICO...');
        
        // –°—Ç–≤–æ—Ä—é—î–º–æ ICO —Ñ–∞–π–ª
        const icoBuffer = await toIco(pngBuffers);
        
        // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ ICO —Ñ–∞–π–ª
        await fs.writeFile(icoPath, icoBuffer);
        
        console.log('‚úÖ ICO —Ñ–∞–π–ª —Å—Ç–≤–æ—Ä–µ–Ω–æ:', icoPath);
        console.log('üê∑ –Ü–∫–æ–Ω–∫–∞ —Å–≤–∏–Ω–∫–∏ –≥–æ—Ç–æ–≤–∞!');
        
    } catch (error) {
        console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è ICO:', error);
    }
}

createIcoFromSvg();