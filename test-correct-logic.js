// –¢–µ—Å—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ—ó –ª–æ–≥—ñ–∫–∏: —à—É–∫–∞—î–º–æ –∞–±–∑–∞—Ü–∏ –¥–µ –Ñ –Ü –ü–Ü–ë –∑ Excel –Ü "—Ä–æ–∑–ø–æ—Ä—è–¥–∂–µ–Ω–Ω—ñ"

// === –¢–ï–°–¢–û–í–ò–ô –î–û–ö–£–ú–ï–ù–¢ ===
const testDocument = `–ü–µ—Ä—à–∏–π –∞–±–∑–∞—Ü –Ω–µ –º—ñ—Å—Ç–∏—Ç—å –Ω—ñ—á–æ–≥–æ –æ—Å–æ–±–ª–∏–≤–æ–≥–æ.

–£ —Ü—å–æ–º—É —Ä–æ–∑–ø–æ—Ä—è–¥–∂–µ–Ω–Ω—ñ –∑–≥–∞–¥—É—î—Ç—å—Å—è –®–æ—Å—Ç–∞–∫–∞ –û–ª–µ–∫—Å–∞–Ω–¥—Ä–∞ –í–æ–ª–æ–¥–∏–º–∏—Ä–æ–≤–∏—á–∞ —è–∫ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞–ª—å–Ω–æ–≥–æ –∑–∞ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è.

–¢—Ä–µ—Ç—ñ–π –∞–±–∑–∞—Ü —Ç–∞–∫–æ–∂ –±–µ–∑ —Ü—å–æ–≥–æ –∫–ª—é—á–æ–≤–æ–≥–æ —Å–ª–æ–≤–∞, –∞–ª–µ –∑ –Ü–≤–∞–Ω–µ–Ω–∫–æ –í–æ–ª–æ–¥–∏–º–∏—Ä –ü–µ—Ç—Ä–æ–≤–∏—á.

–ß–µ—Ç–≤–µ—Ä—Ç–∏–π –∞–±–∑–∞—Ü –≤–∑–∞–≥–∞–ª—ñ –Ω–µ –ø—Ä–æ —Ü–µ, —Ö–æ—á–∞ —Ç—É—Ç —î –®–æ—Å—Ç–∞–∫ –û–ª–µ–∫—Å–∞–Ω–¥—Ä.

–ü'—è—Ç–∏–π –∞–±–∑–∞—Ü –º—ñ—Å—Ç–∏—Ç—å —Ä–æ–∑–ø–æ—Ä—è–¥–∂–µ–Ω–Ω—è –ø—Ä–æ –Ü–≤–∞–Ω–µ–Ω–∫–∞ –í–æ–ª–æ–¥–∏–º–∏—Ä–∞ –ü–µ—Ç—Ä–æ–≤–∏—á–∞.

–®–æ—Å—Ç–∏–π –∞–±–∑–∞—Ü –ø—Ä–æ —Ä–æ–∑–ø–æ—Ä—è–¥–∂–µ–Ω–Ω—è –∞–ª–µ –±–µ–∑ –∂–æ–¥–Ω–∏—Ö —ñ–º–µ–Ω.`;

// === –Ü–ú–ï–ù–ê –ó EXCEL (–ö–û–õ–û–ù–ö–ê D) ===
const excelNames = [
  '–®–æ—Å—Ç–∞–∫ –û–ª–µ–∫—Å–∞–Ω–¥—Ä –í–æ–ª–æ–¥–∏–º–∏—Ä–æ–≤–∏—á',
  '–Ü–≤–∞–Ω–µ–Ω–∫–æ –í–æ–ª–æ–¥–∏–º–∏—Ä –ü–µ—Ç—Ä–æ–≤–∏—á'
];

console.log(`üß™ === –¢–ï–°–¢ –ü–†–ê–í–ò–õ–¨–ù–û–á –õ–û–ì–Ü–ö–ò ===\n`);
console.log(`üìã –ü–Ü–ë –∑ Excel: ${excelNames.map(n => `"${n}"`).join(', ')}\n`);

console.log(`üìÑ –ê–ù–ê–õ–Ü–ó –î–û–ö–£–ú–ï–ù–¢–£:`);
console.log(`${testDocument}\n`);

// –¢–µ—Å—Ç—É—î–º–æ –ø—Ä–∞–≤–∏–ª—å–Ω—É –ª–æ–≥—ñ–∫—É
const results = [
    // –¢–µ—Å—Ç—É—î–º–æ –∫–æ–∂–µ–Ω –∞–±–∑–∞—Ü –≤—Ä—É—á–Ω—É
    testAbzac("–£ —Ü—å–æ–º—É —Ä–æ–∑–ø–æ—Ä—è–¥–∂–µ–Ω–Ω—ñ –∑–≥–∞–¥—É—î—Ç—å—Å—è –®–æ—Å—Ç–∞–∫–∞ –û–ª–µ–∫—Å–∞–Ω–¥—Ä–∞ –í–æ–ª–æ–¥–∏–º–∏—Ä–æ–≤–∏—á–∞ —è–∫ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞–ª—å–Ω–æ–≥–æ –∑–∞ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è.", excelNames),
    testAbzac("–¢—Ä–µ—Ç—ñ–π –∞–±–∑–∞—Ü —Ç–∞–∫–æ–∂ –±–µ–∑ —Ü—å–æ–≥–æ –∫–ª—é—á–æ–≤–æ–≥–æ —Å–ª–æ–≤–∞, –∞–ª–µ –∑ –Ü–≤–∞–Ω–µ–Ω–∫–æ –í–æ–ª–æ–¥–∏–º–∏—Ä –ü–µ—Ç—Ä–æ–≤–∏—á.", excelNames), 
    testAbzac("–ß–µ—Ç–≤–µ—Ä—Ç–∏–π –∞–±–∑–∞—Ü –≤–∑–∞–≥–∞–ª—ñ –Ω–µ –ø—Ä–æ —Ü–µ, —Ö–æ—á–∞ —Ç—É—Ç —î –®–æ—Å—Ç–∞–∫ –û–ª–µ–∫—Å–∞–Ω–¥—Ä.", excelNames),
    testAbzac("–ü'—è—Ç–∏–π –∞–±–∑–∞—Ü –º—ñ—Å—Ç–∏—Ç—å —Ä–æ–∑–ø–æ—Ä—è–¥–∂–µ–Ω–Ω—è –ø—Ä–æ –Ü–≤–∞–Ω–µ–Ω–∫–∞ –í–æ–ª–æ–¥–∏–º–∏—Ä–∞ –ü–µ—Ç—Ä–æ–≤–∏—á–∞.", excelNames),
    testAbzac("–®–æ—Å—Ç–∏–π –∞–±–∑–∞—Ü –ø—Ä–æ —Ä–æ–∑–ø–æ—Ä—è–¥–∂–µ–Ω–Ω—è –∞–ª–µ –±–µ–∑ –∂–æ–¥–Ω–∏—Ö —ñ–º–µ–Ω.", excelNames)
  ].filter(r => r.shouldInclude);

  console.log(`\nüéØ === –†–ï–ó–£–õ–¨–¢–ê–¢–ò –ü–†–ê–í–ò–õ–¨–ù–û–á –õ–û–ì–Ü–ö–ò ===`);
  console.log(`‚úÖ –ó–Ω–∞–π–¥–µ–Ω–æ ${results.length} –ø—ñ–¥—Ö–æ–¥—è—â–∏—Ö –∞–±–∑–∞—Ü—ñ–≤:\n`);

  results.forEach((result, index) => {
    console.log(`${index + 1}. –ê–ë–ó–ê–¶:`);
    console.log(`   –¢–µ–∫—Å—Ç: "${result.paragraph}"`);
    console.log(`   –ú—ñ—Å—Ç–∏—Ç—å "—Ä–æ–∑–ø–æ—Ä—è–¥–∂–µ–Ω–Ω—è": ${result.containsOrder ? '‚úÖ' : '‚ùå'}`);
    console.log(`   –ó–Ω–∞–π–¥–µ–Ω—ñ –ü–Ü–ë: ${result.matchedNames.join(', ')}`);
    console.log(`   –í–ö–õ–Æ–ß–ï–ù–û: ${result.shouldInclude ? '‚úÖ' : '‚ùå'}\n`);
  });

// –§—É–Ω–∫—Ü—ñ—è –¥–ª—è —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è –æ–∫—Ä–µ–º–æ–≥–æ –∞–±–∑–∞—Ü—É
function testAbzac(paragraph, excelNames) {
  const containsOrder = /—Ä–æ–∑–ø–æ—Ä—è–¥–∂–µ–Ω–Ω[—ñ—ó—è]/i.test(paragraph);
  const matchedNames = [];
  
  // –Ü–º—ñ—Ç—É—î–º–æ –ø–µ—Ä–µ–≤—ñ—Ä–∫—É –ü–Ü–ë (—Å–ø—Ä–æ—â–µ–Ω–æ)
  for (const name of excelNames) {
    if (paragraph.includes('–®–æ—Å—Ç–∞–∫–∞ –û–ª–µ–∫—Å–∞–Ω–¥—Ä–∞ –í–æ–ª–æ–¥–∏–º–∏—Ä–æ–≤–∏—á–∞') && name.includes('–®–æ—Å—Ç–∞–∫ –û–ª–µ–∫—Å–∞–Ω–¥—Ä –í–æ–ª–æ–¥–∏–º–∏—Ä–æ–≤–∏—á')) {
      matchedNames.push(name);
    }
    if (paragraph.includes('–Ü–≤–∞–Ω–µ–Ω–∫–∞ –í–æ–ª–æ–¥–∏–º–∏—Ä–∞ –ü–µ—Ç—Ä–æ–≤–∏—á–∞') && name.includes('–Ü–≤–∞–Ω–µ–Ω–∫–æ –í–æ–ª–æ–¥–∏–º–∏—Ä –ü–µ—Ç—Ä–æ–≤–∏—á')) {
      matchedNames.push(name);
    }
    if (paragraph.includes('–Ü–≤–∞–Ω–µ–Ω–∫–æ –í–æ–ª–æ–¥–∏–º–∏—Ä –ü–µ—Ç—Ä–æ–≤–∏—á') && name.includes('–Ü–≤–∞–Ω–µ–Ω–∫–æ –í–æ–ª–æ–¥–∏–º–∏—Ä –ü–µ—Ç—Ä–æ–≤–∏—á')) {
      matchedNames.push(name);
    }
    if (paragraph.includes('–®–æ—Å—Ç–∞–∫ –û–ª–µ–∫—Å–∞–Ω–¥—Ä') && name.includes('–®–æ—Å—Ç–∞–∫ –û–ª–µ–∫—Å–∞–Ω–¥—Ä –í–æ–ª–æ–¥–∏–º–∏—Ä–æ–≤–∏—á')) {
      // –ù–ï –¥–æ–¥–∞—î–º–æ, –æ—Å–∫—ñ–ª—å–∫–∏ —Ü–µ —á–∞—Å—Ç–∫–æ–≤–∏–π –∑–±—ñ–≥
    }
  }
  
  // –ü–†–ê–í–ò–õ–¨–ù–ê –õ–û–ì–Ü–ö–ê: –Ü "—Ä–æ–∑–ø–æ—Ä—è–¥–∂–µ–Ω–Ω—è" –Ü –ü–Ü–ë –≤ –æ–¥–Ω–æ–º—É –∞–±–∑–∞—Ü—ñ
  const shouldInclude = containsOrder && matchedNames.length > 0;
  
  console.log(`üìù –ê–±–∑–∞—Ü: "${paragraph}"`);
  console.log(`   üîë "—Ä–æ–∑–ø–æ—Ä—è–¥–∂–µ–Ω–Ω—è": ${containsOrder ? '‚úÖ' : '‚ùå'}`);
  console.log(`   üë§ –ü–Ü–ë –∑–Ω–∞–π–¥–µ–Ω–æ: ${matchedNames.length > 0 ? '‚úÖ' : '‚ùå'} (${matchedNames.join(', ') || '–Ω–µ–º–∞—î'})`);
  console.log(`   ‚û°Ô∏è  –í–ö–õ–Æ–ß–ò–¢–ò: ${shouldInclude ? '‚úÖ' : '‚ùå'}`);
  
  return {
    paragraph,
    containsOrder,
    matchedNames,
    shouldInclude
  };
}