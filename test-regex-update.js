// –¢–µ—Å—Ç –æ–Ω–æ–≤–ª–µ–Ω–æ–≥–æ —Ä–µ–≥–µ–∫—Å—É –¥–ª—è –ø—ñ–¥—Ç—Ä–∏–º–∫–∏ "—Ä–æ–∑–ø–æ—Ä—è–¥–∂–µ–Ω–Ω—ñ" –¢–ê "—Ä–æ–∑–ø–æ—Ä—è–¥–∂–µ–Ω–Ω—è"

const testRegex = /—Ä–æ–∑–ø–æ—Ä—è–¥(–∂–µ–Ω–Ω[—ñ—ó—è]|–∂–µ–Ω–Ω—è)/i;

const testCases = [
  // –Ü—Å–Ω—É—é—á—ñ –≤–∞—Ä—ñ–∞–Ω—Ç–∏ (–ø–æ–≤–∏–Ω–Ω—ñ –ø—Ä–∞—Ü—é–≤–∞—Ç–∏)
  "—É —Ä–æ–∑–ø–æ—Ä—è–¥–∂–µ–Ω–Ω—ñ –∫–æ–º–∞–Ω–¥–∏—Ä–∞ —á–∞—Å—Ç–∏–Ω–∏",
  "—â–æ –ø–µ—Ä–µ–±—É–≤–∞—î —É —Ä–æ–∑–ø–æ—Ä—è–¥–∂–µ–Ω–Ω—ñ",  
  "–∑–∞—Ä–∞—Ö—É–≤–∞—Ç–∏ —É —Ä–æ–∑–ø–æ—Ä—è–¥–∂–µ–Ω–Ω—è",
  "–ø–µ—Ä–µ–±—É–≤–∞—Ç–∏ —É —Ä–æ–∑–ø–æ—Ä—è–¥–∂–µ–Ω–Ωi",
  "—É —Ä–æ–∑–ø–æ—Ä—è–¥–∂–µ–Ω–Ωi –∫–æ–º–∞–Ω–¥–∏—Ä–∞",
  
  // –ù–æ–≤—ñ –≤–∞—Ä—ñ–∞–Ω—Ç–∏ (—Ç–µ–ø–µ—Ä —Ç–∞–∫–æ–∂ –ø–æ–≤–∏–Ω–Ω—ñ –ø—Ä–∞—Ü—é–≤–∞—Ç–∏)
  "–∑–∞—Ä–∞—Ö—É–≤–∞—Ç–∏ —É —Ä–æ–∑–ø–æ—Ä—è–¥–∂–µ–Ω–Ω—è –∫–æ–º–∞–Ω–¥–∏—Ä–∞",
  "–ø–µ—Ä–µ–≤–µ—Å—Ç–∏ —É —Ä–æ–∑–ø–æ—Ä—è–¥–∂–µ–Ω–Ω—è —á–∞—Å—Ç–∏–Ω–∏", 
  "–Ω–∞–ø—Ä–∞–≤–∏—Ç–∏ —É —Ä–æ–∑–ø–æ—Ä—è–¥–∂–µ–Ω–Ω—è",
  "—É —Ä–æ–∑–ø–æ—Ä—è–¥–∂–µ–Ω–Ω—è –∫–µ—Ä—ñ–≤–Ω–∏–∫–∞",
  "–¥–ª—è —Ä–æ–∑–ø–æ—Ä—è–¥–∂–µ–Ω–Ω—è –∫–æ–º–∞–Ω–¥—É–≤–∞–Ω–Ω—è–º",
  
  // –ù–µ–≥–∞—Ç–∏–≤–Ω—ñ —Ç–µ—Å—Ç–∏ (–ù–ï –ø–æ–≤–∏–Ω–Ω—ñ –ø—Ä–∞—Ü—é–≤–∞—Ç–∏)
  "—Ä–æ–∑–ø–æ—Ä—è–¥–∂–∞—Ç–∏—Å—è –∫–æ—à—Ç–∞–º–∏",
  "—Ä–æ–∑–ø–æ—Ä—è–¥–Ω–∏–∫ –º–∞–π–Ω–∞",
  "—Ä–æ–∑–ø–æ—Ä—è–¥—á–∏–π –¥–æ–∫—É–º–µ–Ω—Ç",
  "–Ω–µ –º–∞—î —Ä–æ–∑–ø–æ—Ä—è–¥–∂–µ–Ω—å"
];

console.log('üß™ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –æ–Ω–æ–≤–ª–µ–Ω–æ–≥–æ regex: /—Ä–æ–∑–ø–æ—Ä—è–¥(–∂–µ–Ω–Ω[—ñ—ó—è]|–∂–µ–Ω–Ω—è)/i\n');

testCases.forEach((testCase, index) => {
  const matches = testRegex.test(testCase);
  const status = matches ? '‚úÖ' : '‚ùå';
  console.log(`${status} –¢–µ—Å—Ç ${index + 1}: "${testCase}" ‚Üí ${matches}`);
});

console.log('\nüìä –ü—ñ–¥—Å—É–º–æ–∫:');
console.log('‚úÖ –ü–æ–≤–∏–Ω–Ω—ñ –∑–Ω–∞—Ö–æ–¥–∏—Ç–∏—Å—è: —Ä–æ–∑–ø–æ—Ä—è–¥–∂–µ–Ω–Ω—ñ, —Ä–æ–∑–ø–æ—Ä—è–¥–∂–µ–Ω–Ω—è, —Ä–æ–∑–ø–æ—Ä—è–¥–∂–µ–Ω–Ωi');
console.log('‚ùå –ù–ï –ø–æ–≤–∏–Ω–Ω—ñ –∑–Ω–∞—Ö–æ–¥–∏—Ç–∏—Å—è: —Ä–æ–∑–ø–æ—Ä—è–¥–∂–∞—Ç–∏—Å—è, —Ä–æ–∑–ø–æ—Ä—è–¥–Ω–∏–∫, —Ä–æ–∑–ø–æ—Ä—è–¥—á–∏–π');

// –î–æ–¥–∞—Ç–∫–æ–≤–∏–π —Ç–µ—Å—Ç –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –≥—Ä—É–ø
const detailedTests = [
  "—É —Ä–æ–∑–ø–æ—Ä—è–¥–∂–µ–Ω–Ω—ñ",  // –≥—Ä—É–ø–∞ 1: –∂–µ–Ω–Ω + —ñ
  "—É —Ä–æ–∑–ø–æ—Ä—è–¥–∂–µ–Ω–Ω—è",   // –≥—Ä—É–ø–∞ 2: –∂–µ–Ω–Ω—è
  "—É —Ä–æ–∑–ø–æ—Ä—è–¥–∂–µ–Ω–Ωi",  // –≥—Ä—É–ø–∞ 1: –∂–µ–Ω–Ω + i 
  "—É —Ä–æ–∑–ø–æ—Ä—è–¥–∂–µ–Ω—ñ"     // –Ω–µ –ø–æ–≤–∏–Ω–Ω–æ –ø—Ä–∞—Ü—é–≤–∞—Ç–∏
];

console.log('\nüîç –î–µ—Ç–∞–ª—å–Ω–∏–π –∞–Ω–∞–ª—ñ–∑ –≥—Ä—É–ø:');
detailedTests.forEach((test, i) => {
  const match = test.match(testRegex);
  if (match) {
    console.log(`‚úÖ "${test}" ‚Üí –∑–Ω–∞–π–¥–µ–Ω–æ: "${match[0]}", –≥—Ä—É–ø–∞: "${match[1]}"`);
  } else {
    console.log(`‚ùå "${test}" ‚Üí –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ`);
  }
});