/**
 * UpdateManager - –£–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –∞–≤—Ç–æ–æ–Ω–æ–≤–ª–µ–Ω–Ω—è–º –ø—Ä–æ–≥—Ä–∞–º–∏
 * FIXED: –í–∏–Ω–µ—Å–µ–Ω–æ –∑ main.ts (—Ä—è–¥–∫–∏ 486-914)
 * v3.0: –Ü–Ω—Ç–µ–≥—Ä–∞—Ü—ñ—è –∑ Advanced Auto-Update System (EventEmitter API)
 * 
 * –í—ñ–¥–ø–æ–≤—ñ–¥–∞–ª—å–Ω—ñ—Å—Ç—å:
 * - –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ –æ–Ω–æ–≤–ª–µ–Ω—å
 * - –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ç–∞ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –æ–Ω–æ–≤–ª–µ–Ω—å
 * - –í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –ø—Ä–æ–≥—Ä–µ—Å—É –æ–Ω–æ–≤–ª–µ–Ω–Ω—è (—Ä–µ–∞–ª—å–Ω–∏–π —á–∞—Å: %, —à–≤–∏–¥–∫—ñ—Å—Ç—å, —Ä–æ–∑–º—ñ—Ä)
 * - –û–±—Ä–æ–±–∫–∞ —Å—Ç–∞—Ç—É—Å–Ω–∏—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å (—Ä–æ–∑–ø–∞–∫—É–≤–∞–Ω–Ω—è, backup, –∑–∞–º—ñ–Ω–∞ —Ñ–∞–π–ª—ñ–≤)
 * - –û–±—Ä–æ–±–∫–∞ –ø–æ–º–∏–ª–æ–∫ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
 * - –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –ø—ñ—Å–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
 * 
 * –Ü–Ω—Ç–µ–≥—Ä–∞—Ü—ñ—è –∑ updateService v3.0:
 * - onDownloadProgress: –ø—Ä–æ–≥—Ä–µ—Å –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∑ fetch streams
 * - onUpdateStatus: —Å—Ç–∞—Ç—É—Å–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ—ó —É—Å—Ç–∞–Ω–æ–≤–∫–∏
 * - onUpdateError: –æ–±—Ä–æ–±–∫–∞ –ø–æ–º–∏–ª–æ–∫ –≤ —Ä–µ–∞–ª—å–Ω–æ–º—É —á–∞—Å—ñ
 * 
 * @class UpdateManager
 */

import type { UpdateInfo } from './types';
import { byId, log } from './helpers';

export class UpdateManager {
  private isProcessing: boolean = false;
  private currentUpdateInfo: UpdateInfo | null = null;

  /**
   * –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä - —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î UpdateManager
   * FIXED: –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –Ω–∞–ª–∞—à—Ç–æ–≤—É—î —Å–ª—É—Ö–∞—á—ñ–≤ –ø–æ–¥—ñ–π
   */
  constructor() {
    this.setupUpdateListeners();
    this.setupUpdateEventListeners();
    this.bindUpdateButtons();
  }

  /**
   * –ü—Ä–∏–≤'—è–∑–∫–∞ –æ–±—Ä–æ–±–Ω–∏–∫—ñ–≤ –¥–æ –∫–Ω–æ–ø–æ–∫ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
   * FIXED: –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î –ø—Ä–∞–≤–∏–ª—å–Ω—ñ ID –∑ HTML
   * @private
   */
  private bindUpdateButtons(): void {
    // –ö–Ω–æ–ø–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ–≥–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
    byId('btn-auto-update')?.addEventListener('click', () => {
      this.downloadAndInstallUpdate();
    });

    // –ö–Ω–æ–ø–∫–∞ –æ–±–æ–≤'—è–∑–∫–æ–≤–æ–≥–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
    byId('btn-mandatory-update')?.addEventListener('click', () => {
      this.downloadAndInstallUpdate();
    });

    // –ö–Ω–æ–ø–∫–∞ —Ä—É—á–Ω–æ–≥–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
    byId('btn-manual-download')?.addEventListener('click', () => {
      this.openDownloadPage();
    });

    // –ö–Ω–æ–ø–∫–∞ —Å–∫–∞—Å—É–≤–∞–Ω–Ω—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
    byId('btn-cancel-update')?.addEventListener('click', () => {
      this.cancelUpdate();
    });

    // –ö–Ω–æ–ø–∫–∞ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫—É –ø—ñ—Å–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
    byId('btn-restart-after-update')?.addEventListener('click', () => {
      this.restartApp();
    });

    // –ö–Ω–æ–ø–∫–∞ –ø–æ–≤—Ç–æ—Ä—É –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –ø—Ä–∏ –ø–æ–º–∏–ª—Ü—ñ
    byId('btn-retry-update')?.addEventListener('click', () => {
      this.retryUpdate();
    });

    // –ö–Ω–æ–ø–∫–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –ª–æ–≥—É –ø–æ–º–∏–ª–∫–∏
    byId('btn-save-log')?.addEventListener('click', () => {
      this.saveUpdateLog();
    });

    // –ö–Ω–æ–ø–∫–∞ –≤–∏—Ö–æ–¥—É –∑ –¥–æ–¥–∞—Ç–∫—É
    byId('btn-exit-app')?.addEventListener('click', () => {
      window.close();
    });
  }

  /**
   * –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ –æ–Ω–æ–≤–ª–µ–Ω—å
   * FIXED: –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∑ –æ–±—Ä–æ–±–∫–æ—é –ø–æ–º–∏–ª–æ–∫
   * @public
   */
  public async checkForUpdates(): Promise<void> {
    if (this.isProcessing) {
      log('‚ö†Ô∏è –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω—å –≤–∂–µ –≤–∏–∫–æ–Ω—É—î—Ç—å—Å—è');
      return;
    }

    this.isProcessing = true;
    
    const statusDiv = byId('update-status');
    const updateAvailableDiv = byId('update-available');
    
    if (statusDiv) statusDiv.textContent = '–ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å –æ–Ω–æ–≤–ª–µ–Ω—å...';
    if (updateAvailableDiv) updateAvailableDiv.hidden = true;

    try {
      // FIXED: –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ API —á–µ—Ä–µ–∑ electron main –ø—Ä–æ—Ü–µ—Å –¥–ª—è –æ–±—Ö–æ–¥—É CORS
      const updateInfo = await (window as any).api?.checkForUpdates?.();
      
      if (!updateInfo) {
        throw new Error('–ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è');
      }

      if (updateInfo.error) {
        throw new Error(updateInfo.error);
      }

      const { hasUpdate, latestVersion, releaseInfo } = updateInfo;
      
      if (hasUpdate && releaseInfo) {
        // –Ñ –Ω–æ–≤–µ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
        if (statusDiv) statusDiv.textContent = `–î–æ—Å—Ç—É–ø–Ω–∞ –Ω–æ–≤–∞ –≤–µ—Ä—Å—ñ—è: ${latestVersion}`;
        
        // –ü–æ–∫–∞–∑—É—î–º–æ –±–ª–æ–∫ –∑ –∫–Ω–æ–ø–∫–æ—é –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
        if (updateAvailableDiv) {
          // –ó–∞–ø–æ–≤–Ω—é—î–º–æ –¥–∞–Ω—ñ –ø—Ä–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
          const newVersionSpan = byId('new-version');
          const updateDateSpan = byId('update-date');
          const releasNotesLink = byId<HTMLAnchorElement>('release-notes');
          
          if (newVersionSpan) newVersionSpan.textContent = latestVersion;
          if (updateDateSpan) updateDateSpan.textContent = new Date(releaseInfo.published_at).toLocaleDateString();
          if (releasNotesLink) releasNotesLink.href = releaseInfo.html_url;
          
          // –ü–æ–∫–∞–∑—É—î–º–æ –±–ª–æ–∫ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
          updateAvailableDiv.hidden = false;
          
          // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –¥–ª—è –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –ø—ñ–∑–Ω—ñ—à–µ
          this.currentUpdateInfo = { hasUpdate, latestVersion, releaseInfo };
        }
      } else {
        // –ê–∫—Ç—É–∞–ª—å–Ω–∞ –≤–µ—Ä—Å—ñ—è - —Ö–æ–≤–∞—î–º–æ –±–ª–æ–∫ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —ñ –ø–æ–∫–∞–∑—É—î–º–æ —Å—Ç–∞—Ç—É—Å
        if (statusDiv) statusDiv.textContent = '–ê–∫—Ç—É–∞–ª—å–Ω–∞ –≤–µ—Ä—Å—ñ—è';
        if (updateAvailableDiv) updateAvailableDiv.hidden = true;
      }
    } catch (error) {
      console.error('–ü–æ–º–∏–ª–∫–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –æ–Ω–æ–≤–ª–µ–Ω—å:', error);
      if (statusDiv) statusDiv.textContent = '–ü–æ–º–∏–ª–∫–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –æ–Ω–æ–≤–ª–µ–Ω—å. –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ —ñ–Ω—Ç–µ—Ä–Ω–µ—Ç-–∑\'—î–¥–Ω–∞–Ω–Ω—è.';
    } finally {
      this.isProcessing = false;
    }
  }

  /**
   * –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —Å–ª—É—Ö–∞—á—ñ–≤ –ø–æ–¥—ñ–π –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –≤—ñ–¥ main process
   * FIXED: –û–Ω–æ–≤–ª–µ–Ω–æ –¥–ª—è Advanced API –∑ EventEmitter (v3.0)
   * @private
   */
  private setupUpdateListeners(): void {
    // –ü—Ä–æ–≥—Ä–µ—Å –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∑ updateService v3.0 (EventEmitter)
    (window as any).api?.onDownloadProgress?.((progress: any) => {
      this.handleUpdateProgress({
        percent: progress.percent || 0,
        speedKbps: progress.bytesPerSecond ? (progress.bytesPerSecond / 1024) : 0,
        bytesReceived: progress.downloadedBytes || 0,
        totalBytes: progress.totalBytes || 0
      });
    });

    // –°—Ç–∞—Ç—É—Å–Ω—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è (—Ä–æ–∑–ø–∞–∫—É–≤–∞–Ω–Ω—è, —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è backup, –∑–∞–º—ñ–Ω–∞ —Ñ–∞–π–ª—ñ–≤)
    (window as any).api?.onUpdateStatus?.((status: any) => {
      const progressText = document.getElementById('progress-text');
      if (progressText && status.message) {
        progressText.textContent = `üê∑ ${status.message}`;
      }
    });

    // –ü—ñ–¥–ø–∏—Å–∫–∞ –Ω–∞ –∑–º—ñ–Ω—É —Å—Ç–∞—Ç—É—Å—É –æ–Ω–æ–≤–ª–µ–Ω–Ω—è (–∑–∞–ª–∏—à–∞—î–º–æ –¥–ª—è —Å—É–º—ñ—Å–Ω–æ—Å—Ç—ñ)
    (window as any).api?.onUpdateStateChanged?.((state: string) => {
      this.handleUpdateStateChange(state);
    });

    // –û–±—Ä–æ–±–∫–∞ –ø–æ–º–∏–ª–æ–∫ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
    (window as any).api?.onUpdateError?.((error: any) => {
      this.handleUpdateError(error.message || error);
    });

    // –ü—ñ–¥–ø–∏—Å–∫–∞ –Ω–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
    (window as any).api?.onUpdateComplete?.(() => {
      this.handleUpdateComplete();
    });
  }

  /**
   * –î–æ–¥–∞—Ç–∫–æ–≤–µ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —Å–ª—É—Ö–∞—á—ñ–≤ –ø–æ–¥—ñ–π (Advanced API –∑ –ø—Ä–æ–≥—Ä–µ—Å-–±–∞—Ä–æ–º)
   * FIXED: –û–Ω–æ–≤–ª–µ–Ω–æ –¥–ª—è –ø—ñ–¥—Ç—Ä–∏–º–∫–∏ EventEmitter API –∑ updateService v3.0
   * @private
   */
  private setupUpdateEventListeners(): void {
    // –ü—Ä–æ–≥—Ä–µ—Å –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è (–Ω–æ–≤–∞ EventEmitter API –∑ v3.0)
    (window as any).api?.onDownloadProgress?.((progress: any) => {
      this.handleUpdateProgress({
        percent: progress.percent || 0,
        speedKbps: progress.bytesPerSecond ? (progress.bytesPerSecond / 1024) : 0,
        bytesReceived: progress.downloadedBytes || 0,
        totalBytes: progress.totalBytes || 0
      });
    });

    // –°—Ç–∞—Ç—É—Å–Ω—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è (—Ä–æ–∑–ø–∞–∫—É–≤–∞–Ω–Ω—è, backup, –∑–∞–º—ñ–Ω–∞ —Ñ–∞–π–ª—ñ–≤)
    (window as any).api?.onUpdateStatus?.((status: any) => {
      const progressText = document.getElementById('progress-text');
      if (progressText && status.message) {
        progressText.textContent = `üê∑ ${status.message}`;
      }
    });

    // –û–±—Ä–æ–±–∫–∞ –ø–æ–º–∏–ª–æ–∫
    (window as any).api?.onUpdateError?.((error: any) => {
      this.showUpdateError(error.message || error);
    });
  }

  /**
   * –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ç–∞ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
   * FIXED: –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–µ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∑ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è–º –ø—Ä–æ–≥—Ä–µ—Å—É
   * @private
   */
  private async downloadAndInstallUpdate(): Promise<void> {
    if (!this.currentUpdateInfo) {
      this.showUpdateError('–ù–µ–º–∞—î —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –ø—Ä–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è');
      return;
    }

    try {
      this.showUpdateProgress('–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è...');
      
      const result = await (window as any).api?.downloadUpdate?.(this.currentUpdateInfo);
      
      if (!result?.success) {
        this.showUpdateError('–ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è');
      }
    } catch (error) {
      console.error('–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è:', error);
      this.showUpdateError('–ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥ —á–∞—Å –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è: ' + error);
    }
  }

  /**
   * –í—ñ–¥–∫—Ä–∏—Ç—Ç—è —Å—Ç–æ—Ä—ñ–Ω–∫–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —É –±—Ä–∞—É–∑–µ—Ä—ñ
   * FIXED: –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î external browser
   * @private
   */
  private openDownloadPage(): void {
    if (this.currentUpdateInfo?.releaseInfo?.html_url) {
      (window as any).api?.openExternal?.(this.currentUpdateInfo.releaseInfo.html_url);
    }
  }

  /**
   * –°–∫–∞—Å—É–≤–∞–Ω–Ω—è –ø–æ—Ç–æ—á–Ω–æ–≥–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
   * NOTE: –£ —Å–ø—Ä–æ—â–µ–Ω—ñ–π –≤–µ—Ä—Å—ñ—ó –ø—Ä–æ—Å—Ç–æ –ø—Ä–∏—Ö–æ–≤—É—î–º–æ –ø—Ä–æ–≥—Ä–µ—Å —Ç–∞ –ø–æ–≤–µ—Ä—Ç–∞—î–º–æ—Å—å –¥–æ –ø–æ—á–∞—Ç–∫–æ–≤–æ–≥–æ —Å—Ç–∞–Ω—É
   * @private
   */
  private async cancelUpdate(): Promise<void> {
    try {
      this.hideUpdateProgress();
      this.showUpdateAvailable(); // –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ –¥–æ —Å—Ç–∞–Ω—É "–¥–æ—Å—Ç—É–ø–Ω–µ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è"
    } catch (error) {
      console.error('–ü–æ–º–∏–ª–∫–∞ —Å–∫–∞—Å—É–≤–∞–Ω–Ω—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è:', error);
    }
  }

  /**
   * –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –∑–∞—Å—Ç–æ—Å—É–Ω–∫—É –ø—ñ—Å–ª—è –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
   * FIXED: –í–∏–∫–ª–∏–∫–∞—î API –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫—É
   * @private
   */
  private async restartApp(): Promise<void> {
    try {
      await (window as any).api?.restartApp?.();
    } catch (error) {
      console.error('–ü–æ–º–∏–ª–∫–∞ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫—É:', error);
    }
  }

  /**
   * –ü–æ–∫–∞–∑–∞—Ç–∏ –ø—Ä–æ–≥—Ä–µ—Å –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
   * FIXED: –ö–µ—Ä—É—î –≤–∏–¥–∏–º—ñ—Å—Ç—é –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ UI
   * @private
   */
  private showUpdateProgress(text: string): void {
    const progressDiv = byId('update-progress');
    const progressText = byId('progress-text');
    const availableDiv = byId('update-available');
    
    if (progressDiv) progressDiv.hidden = false;
    if (progressText) progressText.textContent = text;
    if (availableDiv) availableDiv.hidden = true;
  }

  /**
   * –°—Ö–æ–≤–∞—Ç–∏ –ø—Ä–æ–≥—Ä–µ—Å –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
   * FIXED: –ü—Ä–∏—Ö–æ–≤—É—î UI –ø—Ä–æ–≥—Ä–µ—Å—É
   * @private
   */
  private hideUpdateProgress(): void {
    const progressDiv = byId('update-progress');
    if (progressDiv) progressDiv.hidden = true;
  }

  /**
   * –ü–æ–∫–∞–∑–∞—Ç–∏ –±–ª–æ–∫ "–î–æ—Å—Ç—É–ø–Ω–µ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è"
   * FIXED: –ü–µ—Ä–µ–º–∏–∫–∞–Ω–Ω—è –º—ñ–∂ UI —Å—Ç–∞–Ω–∞–º–∏
   * @private
   */
  private showUpdateAvailable(): void {
    const availableDiv = byId('update-available');
    const progressDiv = byId('update-progress');
    
    if (availableDiv) availableDiv.hidden = false;
    if (progressDiv) progressDiv.hidden = true;
  }

  /**
   * –û–±—Ä–æ–±–∫–∞ –ø—Ä–æ–≥—Ä–µ—Å—É –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –≤—ñ–¥ main process
   * FIXED: –û–Ω–æ–≤–ª—é—î UI –µ–ª–µ–º–µ–Ω—Ç–∏ –ø—Ä–æ–≥—Ä–µ—Å—É
   * @private
   */
  private handleUpdateProgress(progress: any): void {
    const progressFill = byId('progress-fill');
    const progressPercent = byId('progress-percent');
    const progressSpeed = byId('progress-speed');
    const progressSize = byId('progress-size');

    if (progressFill) {
      progressFill.style.width = `${progress.percent || 0}%`;
    }
    
    if (progressPercent) {
      progressPercent.textContent = `${Math.round(progress.percent || 0)}%`;
    }
    
    if (progressSpeed && progress.speedKbps) {
      progressSpeed.textContent = `${Math.round(progress.speedKbps)} KB/s`;
    }
    
    if (progressSize && progress.bytesReceived && progress.totalBytes) {
      const receivedMB = (progress.bytesReceived / 1024 / 1024).toFixed(1);
      const totalMB = (progress.totalBytes / 1024 / 1024).toFixed(1);
      progressSize.textContent = `${receivedMB} / ${totalMB} MB`;
    }
  }

  /**
   * –û–±—Ä–æ–±–∫–∞ –∑–º—ñ–Ω–∏ —Å—Ç–∞–Ω—É –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
   * FIXED: –ü–æ–∫–∞–∑—É—î –µ–º–æ–¥–∑—ñ —Å—Ç–∞—Ç—É—Å–∏
   * @private
   */
  private handleUpdateStateChange(state: string): void {
    const progressText = byId('progress-text');
    const restartBtn = byId('btn-restart-after-update');
    
    if (!progressText) return;

    switch (state) {
      case 'downloading':
        progressText.textContent = 'üê∑ –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è...';
        break;
      case 'verifying':
        progressText.textContent = 'üîç –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Ü—ñ–ª—ñ—Å–Ω—ñ—Å—Ç—å —Ñ–∞–π–ª—ñ–≤...';
        break;
      case 'installing':
        progressText.textContent = '‚öôÔ∏è –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è...';
        break;
      case 'restarting':
        progressText.textContent = 'üîÑ –ì–æ—Ç—É—î–º–æ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫...';
        if (restartBtn) restartBtn.style.display = 'block';
        break;
      case 'uptodate':
        this.hideUpdateProgress();
        break;
      case 'failed':
        this.showUpdateError('–ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥ —á–∞—Å –æ–Ω–æ–≤–ª–µ–Ω–Ω—è');
        break;
    }
  }

  /**
   * –û–±—Ä–æ–±–∫–∞ –ø–æ–º–∏–ª–∫–∏ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
   * FIXED: –ü–æ–∫–∞–∑—É—î –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É
   * @private
   */
  private handleUpdateError(error: string): void {
    this.showUpdateError(error);
  }

  /**
   * –û–±—Ä–æ–±–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
   * FIXED: –ü–æ–∫–∞–∑—É—î –∫–Ω–æ–ø–∫—É –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫—É
   * @private
   */
  private handleUpdateComplete(): void {
    const progressText = byId('progress-text');
    const restartBtn = byId('btn-restart-after-update');
    
    if (progressText) progressText.textContent = '‚úÖ –û–Ω–æ–≤–ª–µ–Ω–Ω—è –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ! –ù–∞—Ç–∏—Å–Ω—ñ—Ç—å "–ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–∏"';
    if (restartBtn) restartBtn.style.display = 'block';
  }

  /**
   * –ü–æ–∫–∞–∑–∞—Ç–∏ –ø–æ–º–∏–ª–∫—É –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
   * FIXED: –í—ñ–¥–æ–±—Ä–∞–∂–∞—î –¥—ñ–∞–ª–æ–≥ –ø–æ–º–∏–ª–∫–∏
   * @private
   */
  private showUpdateError(message: string): void {
    const errorDiv = byId('update-error');
    const errorMessage = byId('error-message');
    const progressDiv = byId('update-progress');
    
    if (errorDiv) errorDiv.hidden = false;
    if (errorMessage) errorMessage.textContent = message;
    if (progressDiv) progressDiv.hidden = true;
  }

  /**
   * –ü–æ–≤—Ç–æ—Ä–Ω–∞ —Å–ø—Ä–æ–±–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
   * FIXED: –•–æ–≤–∞—î –¥—ñ–∞–ª–æ–≥ –ø–æ–º–∏–ª–∫–∏ —Ç–∞ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞—î –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
   * @private
   */
  private retryUpdate(): void {
    // –•–æ–≤–∞—î–º–æ –¥—ñ–∞–ª–æ–≥ –ø–æ–º–∏–ª–∫–∏ —ñ –ø–æ–≤—Ç–æ—Ä—é—î–º–æ —Å–ø—Ä–æ–±—É –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
    const errorDiv = byId('update-error');
    if (errorDiv) errorDiv.hidden = true;
    
    // –ü–æ–≤—Ç–æ—Ä—é—î–º–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
    this.downloadAndInstallUpdate();
  }

  /**
   * –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è –ª–æ–≥—É –ø–æ–º–∏–ª–∫–∏ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
   * FIXED: –°—Ç–≤–æ—Ä—é—î —Ñ–∞–π–ª –ª–æ–≥—É –∑ –¥–µ—Ç–∞–ª—è–º–∏ –ø–æ–º–∏–ª–∫–∏
   * @private
   */
  private async saveUpdateLog(): Promise<void> {
    try {
      // –û—Ç—Ä–∏–º—É—î–º–æ —Ç–µ–∫—Å—Ç –ø–æ–º–∏–ª–∫–∏
      const errorMessage = byId('error-message')?.textContent || '–ù–µ–≤—ñ–¥–æ–º–∞ –ø–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è';
      
      // FIXED: –°—Ç–≤–æ—Ä—é—î–º–æ –ª–æ–≥ –∑ –¥–µ—Ç–∞–ª—è–º–∏
      const currentVersion = await (window as any).api?.invoke?.('updates:get-version') || '–Ω–µ–≤—ñ–¥–æ–º–æ';
      const logContent = [
        `=== –õ–æ–≥ –ø–æ–º–∏–ª–∫–∏ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è KontrNahryuk ===`,
        `–ß–∞—Å: ${new Date().toLocaleString()}`,
        `–ü–æ—Ç–æ—á–Ω–∞ –≤–µ—Ä—Å—ñ—è: ${currentVersion}`,
        `–°–ø—Ä–æ–±–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –¥–æ: ${this.currentUpdateInfo?.latestVersion || '–Ω–µ–≤—ñ–¥–æ–º–æ'}`,
        `–ü–æ–º–∏–ª–∫–∞: ${errorMessage}`,
        ``,
        `–î–µ—Ç–∞–ª—ñ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è:`,
        JSON.stringify(this.currentUpdateInfo, null, 2),
        ``,
        `=== –ö—ñ–Ω–µ—Ü—å –ª–æ–≥—É ===`
      ].join('\n');

      // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –ª–æ–≥ –ª–æ–∫–∞–ª—å–Ω–æ —á–µ—Ä–µ–∑ download
      const blob = new Blob([logContent], { type: 'text/plain' });
      const url = URL.createObjectURL(blob);
      const a = document.createElement('a');
      a.href = url;
      a.download = `update-log-${new Date().getTime()}.txt`;
      a.click();
      URL.revokeObjectURL(url);
      
      // –ü–æ–∫–∞–∑—É—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ —É—Å–ø—ñ—à–Ω–µ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è
      const errorMessageEl = byId('error-message');
      if (errorMessageEl) {
        const originalText = errorMessageEl.textContent;
        errorMessageEl.textContent = '–õ–æ–≥ –∑–±–µ—Ä–µ–∂–µ–Ω–æ! –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –ø–∞–ø–∫—É Downloads.';
        
        // –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ –æ—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω–∏–π —Ç–µ–∫—Å—Ç —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥–∏
        setTimeout(() => {
          if (errorMessageEl) errorMessageEl.textContent = originalText;
        }, 3000);
      }
    } catch (error) {
      console.error('–ü–æ–º–∏–ª–∫–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –ª–æ–≥—É:', error);
    }
  }
}
