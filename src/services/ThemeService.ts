/**
 * ThemeService - –£–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è —Ç–µ–º–æ—é —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É
 * FIXED: –í–∏–Ω–µ—Å–µ–Ω–æ –∑ main.ts (—Ä—è–¥–∫–∏ 1225-1265)
 * 
 * –í—ñ–¥–ø–æ–≤—ñ–¥–∞–ª—å–Ω—ñ—Å—Ç—å:
 * - –ó–∞—Å—Ç–æ—Å—É–≤–∞–Ω–Ω—è —Ç–µ–º–∏ (light/dark/system)
 * - –°–ª—É—Ö–∞—á —Å–∏—Å—Ç–µ–º–Ω–æ—ó —Ç–µ–º–∏
 * - –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ç–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —Ç–µ–º–∏
 * 
 * @class ThemeService
 */

import { log } from '../helpers';

type Theme = 'light' | 'dark' | 'system';

export class ThemeService {
  /**
   * –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä - —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î ThemeService
   * FIXED: –ù–ï –∑–∞–≤–∞–Ω—Ç–∞–∂—É—î —Ç–µ–º—É –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ, —Ü–µ —Ä–æ–±–∏—Ç—å SettingsManager
   */
  constructor() {
    this.setupSystemThemeListener();
    // –ó–∞—Å—Ç–æ—Å–æ–≤—É—î–º–æ –¥–µ—Ñ–æ–ª—Ç–Ω—É —Ç–µ–º—É, –ø–æ–∫–∏ –Ω–µ –∑–∞–≤–∞–Ω—Ç–∞–∂–∞—Ç—å—Å—è –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è
    this.applyTheme('system');
  }

  /**
   * –ó–∞—Å—Ç–æ—Å—É–≤–∞–Ω–Ω—è —Ç–µ–º–∏ –¥–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞
   * FIXED: –î–æ–¥–∞—î CSS –∫–ª–∞—Å–∏ —Ç–∞ –æ–±—Ä–æ–±–ª—è—î system —Ç–µ–º—É
   * @public
   */
  public applyTheme(theme: string): void {
    const root = document.documentElement;
    
    console.log(`üé® –ó–∞—Å—Ç–æ—Å—É–≤–∞–Ω–Ω—è —Ç–µ–º–∏: ${theme}`);
    
    // –í–∏–¥–∞–ª—è—î–º–æ –≤—Å—ñ –∫–ª–∞—Å–∏ —Ç–µ–º
    root.classList.remove('light', 'dark');
    
    if (theme === 'light') {
      root.classList.add('light');
      console.log('‚úÖ –î–æ–¥–∞–Ω–æ –∫–ª–∞—Å .light');
    } else if (theme === 'dark') {
      // –¢–µ–º–Ω–∞ —Ç–µ–º–∞ –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º –≤ :root, —Ç–æ–º—É –ø—Ä–æ—Å—Ç–æ –≤–∏–¥–∞–ª—è—î–º–æ .light
      console.log('‚úÖ –¢–µ–º–Ω–∞ —Ç–µ–º–∞ –∞–∫—Ç–∏–≤–Ω–∞ (–±–µ–∑ –∫–ª–∞—Å—É)');
    } else if (theme === 'system') {
      // –í–∏–∑–Ω–∞—á–∞—î–º–æ —Å–∏—Å—Ç–µ–º–Ω—É —Ç–µ–º—É
      const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;
      console.log(`üñ•Ô∏è –°–∏—Å—Ç–µ–º–Ω–∞ —Ç–µ–º–∞: ${prefersDark ? 'dark' : 'light'}`);
      
      if (prefersDark) {
        // –¢–µ–º–Ω–∞ —Ç–µ–º–∞ - –≤–∏–¥–∞–ª—è—î–º–æ .light
        console.log('‚úÖ –°–∏—Å—Ç–µ–º–Ω–∞ —Ç–µ–º–Ω–∞ –∞–∫—Ç–∏–≤–Ω–∞');
      } else {
        // –°–≤—ñ—Ç–ª–∞ —Ç–µ–º–∞ - –¥–æ–¥–∞—î–º–æ .light
        root.classList.add('light');
        console.log('‚úÖ –°–∏—Å—Ç–µ–º–Ω–∞ —Å–≤—ñ—Ç–ª–∞ –∞–∫—Ç–∏–≤–Ω–∞');
      }
    }
    
    console.log(`üìù –ü—ñ–¥—Å—É–º–æ–∫: root classes = "${root.className}"`);
  }

  /**
   * –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —Å–ª—É—Ö–∞—á–∞ —Å–∏—Å—Ç–µ–º–Ω–æ—ó —Ç–µ–º–∏
   * FIXED: –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –∑–∞—Å—Ç–æ—Å–æ–≤—É—î —Ç–µ–º—É –ø—Ä–∏ –∑–º—ñ–Ω—ñ —Å–∏—Å—Ç–µ–º–Ω–æ—ó
   * @private
   */
  private setupSystemThemeListener(): void {
    const mediaQuery = window.matchMedia('(prefers-color-scheme: dark)');
    
    mediaQuery.addEventListener('change', async (e) => {
      const currentTheme = await window.api?.getSetting?.('theme', 'system');
      
      // –¢—ñ–ª—å–∫–∏ —è–∫—â–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è system —Ç–µ–º–∞
      if (currentTheme === 'system') {
        log(`üåì –°–∏—Å—Ç–µ–º–Ω–∞ —Ç–µ–º–∞ –∑–º—ñ–Ω–µ–Ω–∞ –Ω–∞ ${e.matches ? '—Ç–µ–º–Ω—É' : '—Å–≤—ñ—Ç–ª—É'}`);
        this.applyTheme('system');
      }
    });
  }

  /**
   * –ó–º—ñ–Ω–∞ —Ç–µ–º–∏ —Ç–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è
   * FIXED: –ü—É–±–ª—ñ—á–Ω–∏–π –º–µ—Ç–æ–¥ –¥–ª—è —ñ–Ω—à–∏—Ö –º–æ–¥—É–ª—ñ–≤
   * @public
   */
  public async setTheme(theme: Theme): Promise<void> {
    try {
      await window.api?.setSetting?.('theme', theme);
      this.applyTheme(theme);
      log(`üé® –¢–µ–º–∞ –∑–º—ñ–Ω–µ–Ω–∞ –Ω–∞: ${theme}`);
    } catch (error) {
      console.error('–ü–æ–º–∏–ª–∫–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è —Ç–µ–º–∏:', error);
    }
  }

  /**
   * –û—Ç—Ä–∏–º–∞–Ω–Ω—è –ø–æ—Ç–æ—á–Ω–æ—ó —Ç–µ–º–∏
   * FIXED: –ü—É–±–ª—ñ—á–Ω–∏–π –º–µ—Ç–æ–¥ –¥–ª—è —ñ–Ω—à–∏—Ö –º–æ–¥—É–ª—ñ–≤
   * @public
   */
  public async getCurrentTheme(): Promise<Theme> {
    try {
      const theme = await window.api?.getSetting?.('theme', 'system');
      return theme as Theme;
    } catch (error) {
      console.warn('–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ç–µ–º–∏:', error);
      return 'system';
    }
  }
}
