/**
 * main.ts - –ì–æ–ª–æ–≤–Ω–∏–π —Ñ–∞–π–ª –¥–æ–¥–∞—Ç–∫—É (refactored)
 * FIXED: –Ü–Ω—Ç–µ–≥—Ä–∞—Ü—ñ—è –≤—Å—ñ—Ö –º–æ–¥—É–ª—ñ–≤ –ø—ñ—Å–ª—è —Ä–æ–∑–¥—ñ–ª–µ–Ω–Ω—è monolithic main.ts
 * 
 * –í—ñ–¥–ø–æ–≤—ñ–¥–∞–ª—å–Ω—ñ—Å—Ç—å:
 * - –Ü–º–ø–æ—Ä—Ç —Ç–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –≤—Å—ñ—Ö –º–µ–Ω–µ–¥–∂–µ—Ä—ñ–≤
 * - –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –≥–ª–æ–±–∞–ª—å–Ω–∏—Ö event listeners
 * - –ö–æ–æ—Ä–¥–∏–Ω–∞—Ü—ñ—è –º—ñ–∂ –º–æ–¥—É–ª—è–º–∏
 * - –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –ø–æ—á–∞—Ç–∫–æ–≤–∏—Ö –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å
 * 
 * –°—Ç—Ä—É–∫—Ç—É—Ä–∞:
 * - Imports: –í—Å—ñ –∫–ª–∞—Å–∏ —Ç–∞ —É—Ç–∏–ª—ñ—Ç–∏
 * - Settings: –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ç–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –æ—Å–Ω–æ–≤–Ω–∏—Ö –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å
 * - Initialization: –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –µ–∫–∑–µ–º–ø–ª—è—Ä—ñ–≤ –∫–ª–∞—Å—ñ–≤
 * - Event Listeners: –ì–ª–æ–±–∞–ª—å–Ω—ñ –æ–±—Ä–æ–±–Ω–∏–∫–∏ –ø–æ–¥—ñ–π
 * 
 * @module main
 * @version 2.0.0 - Refactored version
 */

// === AUTOFILL ERRORS SUPPRESSION ===
// FIXED: –ü—Ä–∏—Ö–æ–≤—É—î–º–æ DevTools Autofill –ø–æ–º–∏–ª–∫–∏, —è–∫—ñ –Ω–µ –∫—Ä–∏—Ç–∏—á–Ω—ñ –¥–ª—è Electron
(function suppressAutofillErrors() {
  const originalError = console.error;
  console.error = function(...args: any[]) {
    const msg = args[0]?.toString() || '';
    // –Ü–≥–Ω–æ—Ä—É—î–º–æ —Ç—ñ–ª—å–∫–∏ Autofill –ø–æ–º–∏–ª–∫–∏
    if (msg.includes('Autofill.enable') || msg.includes('Autofill.setAddresses')) {
      return;
    }
    originalError.apply(console, args);
  };
})();

// === IMPORTS ===

// Types and constants
import type { Route } from './types';
import { byId, log } from './helpers';

// Managers
import { SectionManager } from './SectionManager';
import { SourceSelectionManager } from './SourceSelectionManager';
import { BatchManager } from './BatchManager';
import { UpdateManager } from './UpdateManager';
import { ExcelProcessor } from './ExcelProcessor';

// Services
import { ThemeService } from './services/ThemeService';
import { SettingsManager } from './services/SettingsManager';
import { NavigationService } from './services/NavigationService';
import { UILoggerService } from './services/UILoggerService';

// Utils
import { initializeFilePickers } from './filePicker';

// === GLOBAL STATE ===

let sectionManager: SectionManager;
let sourceSelectionManager: SourceSelectionManager;
let batchManager: BatchManager;
let updateManager: UpdateManager;
let excelProcessor: ExcelProcessor;
let themeService: ThemeService;
let settingsManager: SettingsManager;
let navigationService: NavigationService;
let uiLoggerService: UILoggerService;

// === SETTINGS MANAGEMENT ===

/**
 * –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∑–±–µ—Ä–µ–∂–µ–Ω–∏—Ö –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å –ø—Ä–∏ —Å—Ç–∞—Ä—Ç—ñ
 * FIXED: –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –¥–ª—è –≥–æ–ª–æ–≤–Ω–æ—ó —Å—Ç–æ—Ä—ñ–Ω–∫–∏
 */
async function loadSettings(): Promise<void> {
  try {
    // Load checkbox states
    const is2BSP = await window.api?.getSetting?.('is2BSP', true);
    const isOrder = await window.api?.getSetting?.('isOrder', false);
    const autoOpen = await window.api?.getSetting?.('autoOpen', true);
    
    // Apply saved states
    const is2BSPCheckbox = byId<HTMLInputElement>('t-2bsp');
    const isOrderCheckbox = byId<HTMLInputElement>('t-order');
    const autoOpenCheckbox = byId<HTMLInputElement>('t-autopen');
    
    if (is2BSPCheckbox) is2BSPCheckbox.checked = is2BSP;
    if (isOrderCheckbox) isOrderCheckbox.checked = isOrder;
    if (autoOpenCheckbox) autoOpenCheckbox.checked = autoOpen;
    
    log('‚öôÔ∏è –û—Å–Ω–æ–≤–Ω—ñ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ');
  } catch (err) {
    console.warn('Failed to load settings:', err);
  }
}

/**
 * –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∞–≤—Ç–æ–∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –¥–ª—è —á–µ–∫–±–æ–∫—Å—ñ–≤
 * FIXED: –ü—ñ–¥–ø–∏—Å–∫–∞ –Ω–∞ –∑–º—ñ–Ω–∏ —á–µ–∫–±–æ–∫—Å—ñ–≤ –æ—Å–Ω–æ–≤–Ω–∏—Ö –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å
 */
function setupSettingsAutoSave(): void {
  const checkboxes = ['t-2bsp', 't-order', 't-autopen'];
  const settingsMap: Record<string, string> = {
    't-2bsp': 'is2BSP', 
    't-order': 'isOrder',
    't-autopen': 'autoOpen'
  };
  
  checkboxes.forEach(id => {
    const checkbox = byId<HTMLInputElement>(id);
    if (checkbox) {
      checkbox.addEventListener('change', async () => {
        const setting = settingsMap[id];
        await window.api?.setSetting?.(setting, checkbox.checked);
        log(`üíæ –ó–±–µ—Ä–µ–∂–µ–Ω–æ ${setting} = ${checkbox.checked}`);
      });
    }
  });
}

// === NAVIGATION HELPERS ===

/**
 * –°—Ç–∞—Ä–∏–π –æ–±—Ä–æ–±–Ω–∏–∫ –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó (–¥–ª—è —Å—É–º—ñ—Å–Ω–æ—Å—Ç—ñ)
 * FIXED: –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î navigationService –≤—Å–µ—Ä–µ–¥–∏–Ω—ñ
 * @deprecated –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ navigationService.navigateTo() –∑–∞–º—ñ—Å—Ç—å —Ü—å–æ–≥–æ
 */
function navigate(hash: string): void {
  const route = (hash.replace('#', '') || '/functions') as Route;
  document.querySelectorAll<HTMLElement>('.route').forEach(s => {
    s.hidden = s.dataset.route !== route;
  });
  document.querySelectorAll('.nav a').forEach(a => {
    const href = a.getAttribute('href') || '';
    a.classList.toggle('active', href === `#${route}`);
  });
}

// === INITIALIZATION ===

/**
 * –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –≤—Å—ñ—Ö –º–µ–Ω–µ–¥–∂–µ—Ä—ñ–≤ —Ç–∞ —Å–µ—Ä–≤—ñ—Å—ñ–≤
 * FIXED: –°—Ç–≤–æ—Ä—é—î –µ–∫–∑–µ–º–ø–ª—è—Ä–∏ –∫–ª–∞—Å—ñ–≤ —É –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º—É –ø–æ—Ä—è–¥–∫—É
 */
async function initializeManagers(): Promise<void> {
  try {
    log('üöÄ –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –º–µ–Ω–µ–¥–∂–µ—Ä—ñ–≤...');

    // 1. –°–ø–æ—á–∞—Ç–∫—É —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ –±–∞–∑–æ–≤—ñ —Å–µ—Ä–≤—ñ—Å–∏
    themeService = new ThemeService();
    log('‚úÖ ThemeService —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ');

    settingsManager = new SettingsManager(themeService);
    log('‚úÖ SettingsManager —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ');

    navigationService = new NavigationService();
    log('‚úÖ NavigationService —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ');

    // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ UILoggerService –¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –ª–æ–≥—ñ–≤ –≤ UI
    uiLoggerService = new UILoggerService();
    log('‚úÖ UILoggerService —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ');

    // 2. –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ –º–µ–Ω–µ–¥–∂–µ—Ä–∏ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª—É
    sectionManager = new SectionManager();
    log('‚úÖ SectionManager —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ');

    sourceSelectionManager = new SourceSelectionManager();
    log('‚úÖ SourceSelectionManager —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ');

    batchManager = new BatchManager();
    log('‚úÖ BatchManager —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ');

    // 3. –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ –º–µ–Ω–µ–¥–∂–µ—Ä –æ–Ω–æ–≤–ª–µ–Ω—å
    updateManager = new UpdateManager();
    log('‚úÖ UpdateManager —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ');

    // 4. –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ Excel –ø—Ä–æ—Ü–µ—Å–æ—Ä
    excelProcessor = new ExcelProcessor();
    log('‚úÖ ExcelProcessor —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ');

    log('üéâ –í—Å—ñ –º–µ–Ω–µ–¥–∂–µ—Ä–∏ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ —É—Å–ø—ñ—à–Ω–æ!');
  } catch (error) {
    console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó –º–µ–Ω–µ–¥–∂–µ—Ä—ñ–≤:', error);
  }
}

/**
 * –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –≥–ª–æ–±–∞–ª—å–Ω–∏—Ö –æ–±—Ä–æ–±–Ω–∏–∫—ñ–≤ –ø–æ–¥—ñ–π
 * FIXED: –ü—ñ–¥–ø–∏—Å–∫–∞ –Ω–∞ –≥–ª–æ–±–∞–ª—å–Ω—ñ –ø–æ–¥—ñ—ó
 */
function setupGlobalEventListeners(): void {
  // –°—Ç–∞—Ä–∏–π –æ–±—Ä–æ–±–Ω–∏–∫ –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó (–¥–ª—è —Å—É–º—ñ—Å–Ω–æ—Å—Ç—ñ –∑ —ñ—Å–Ω—É—é—á–æ—é —Ä–æ–∑–º—ñ—Ç–∫–æ—é)
  window.addEventListener('hashchange', () => navigate(location.hash));
  navigate(location.hash);

  // –ü—ñ–¥–ø–∏—Å–∫–∞ –Ω–∞ –∑–º—ñ–Ω–∏ –º–∞—Ä—à—Ä—É—Ç—É –¥–ª—è –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å
  navigationService.onRouteChange((route) => {
    if (route === '/settings') {
      // –ó–∞—Ç—Ä–∏–º–∫–∞ –¥–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è DOM
      setTimeout(() => {
        settingsManager.loadAllSettings();
        settingsManager.setupAutoSave();
        settingsManager.addSettingsAnimations();
      }, 100);
    }
  });

  // –ö–Ω–æ–ø–∫–∏ topbar
  byId('btn-notify')?.addEventListener('click', async () => {
    await window.api?.notify?.('Test', 'This is a test notification');
  });

  byId('btn-docs')?.addEventListener('click', async () => {
    await window.api?.openExternal?.('https://github.com/sashashostak/KontrNahryuk');
  });

  // –ö–Ω–æ–ø–∫–∞ –æ–±—Ä–æ–±–∫–∏ –Ω–∞–∫–∞–∑—É (Functions)
  byId('btn-process-order')?.addEventListener('click', async () => {
    try {
      log('üöÄ –ü–æ—á–∞—Ç–æ–∫ –æ–±—Ä–æ–±–∫–∏ –Ω–∞–∫–∞–∑—É...');
      
      // 1. –û—Ç—Ä–∏–º–∞–Ω–Ω—è –∑–Ω–∞—á–µ–Ω—å –∑ —Ñ–æ—Ä–º–∏
      const sourceType = document.querySelector<HTMLInputElement>('input[name="source-type"]:checked')?.value || 'single-file';
      const resultPath = byId<HTMLInputElement>('result-path')?.value;
      const is2BSP = byId<HTMLInputElement>('t-2bsp')?.checked || false;
      const isOrder = byId<HTMLInputElement>('t-order')?.checked || false;
      const autoOpen = byId<HTMLInputElement>('t-autopen')?.checked || false;
      const excelPath = byId<HTMLInputElement>('excel-path')?.value;
      
      // 2. –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –æ–±–æ–≤'—è–∑–∫–æ–≤–∏—Ö –ø–æ–ª—ñ–≤
      if (!resultPath) {
        log('‚ùå –ü–æ–º–∏–ª–∫–∞: –û–±–µ—Ä—ñ—Ç—å –º—ñ—Å—Ü–µ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç—É');
        await window.api?.notify?.('–ü–æ–º–∏–ª–∫–∞', '–û–±–µ—Ä—ñ—Ç—å –º—ñ—Å—Ü–µ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç—É');
        return;
      }
      
      // 3. –û—Ç—Ä–∏–º–∞–Ω–Ω—è –≤–∏–±—Ä–∞–Ω–æ–≥–æ Word —Ñ–∞–π–ª—É
      let wordFile: File | undefined;
      
      if (sourceType === 'single-file') {
        const fileInput = byId<HTMLInputElement>('word-file');
        wordFile = fileInput?.files?.[0];
        if (!wordFile) {
          log('‚ùå –ü–æ–º–∏–ª–∫–∞: –û–±–µ—Ä—ñ—Ç—å Word —Ñ–∞–π–ª');
          await window.api?.notify?.('–ü–æ–º–∏–ª–∫–∞', '–û–±–µ—Ä—ñ—Ç—å Word —Ñ–∞–π–ª');
          return;
        }
      } else if (sourceType === 'multiple-files') {
        const fileInput = byId<HTMLInputElement>('word-files');
        wordFile = fileInput?.files?.[0];
        if (!wordFile) {
          log('‚ùå –ü–æ–º–∏–ª–∫–∞: –û–±–µ—Ä—ñ—Ç—å —Ö–æ—á–∞ –± –æ–¥–∏–Ω Word —Ñ–∞–π–ª');
          await window.api?.notify?.('–ü–æ–º–∏–ª–∫–∞', '–û–±–µ—Ä—ñ—Ç—å Word —Ñ–∞–π–ª–∏');
          return;
        }
      } else if (sourceType === 'folder') {
        log('‚ùå –†–µ–∂–∏–º –ø–∞–ø–∫–∏ –ø–æ–∫–∏ –Ω–µ –ø—ñ–¥—Ç—Ä–∏–º—É—î—Ç—å—Å—è');
        await window.api?.notify?.('–ü–æ–º–∏–ª–∫–∞', '–†–µ–∂–∏–º –ø–∞–ø–∫–∏ –ø–æ–∫–∏ –Ω–µ —Ä–µ–∞–ª—ñ–∑–æ–≤–∞–Ω–∏–π');
        return;
      }
      
      if (!wordFile) {
        log('‚ùå –ü–æ–º–∏–ª–∫–∞: –ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ Word —Ñ–∞–π–ª');
        return;
      }
      
      log(`üìÇ –û–±—Ä–æ–±–∫–∞ —Ñ–∞–π–ª—É: ${wordFile.name}`);
      
      // 4. –ß–∏—Ç–∞–Ω–Ω—è —Ñ–∞–π–ª—É —è–∫ ArrayBuffer —á–µ—Ä–µ–∑ FileReader
      log('üìñ –ß–∏—Ç–∞–Ω–Ω—è Word —Ñ–∞–π–ª—É...');
      const fileBuffer = await new Promise<ArrayBuffer>((resolve, reject) => {
        const reader = new FileReader();
        reader.onload = () => resolve(reader.result as ArrayBuffer);
        reader.onerror = () => reject(reader.error);
        reader.readAsArrayBuffer(wordFile);
      });
      
      if (!fileBuffer) {
        log('‚ùå –ü–æ–º–∏–ª–∫–∞: –ù–µ –≤–¥–∞–ª–æ—Å—è –ø—Ä–æ—á–∏—Ç–∞—Ç–∏ —Ñ–∞–π–ª');
        await window.api?.notify?.('–ü–æ–º–∏–ª–∫–∞', '–ù–µ –≤–¥–∞–ª–æ—Å—è –ø—Ä–æ—á–∏—Ç–∞—Ç–∏ Word —Ñ–∞–π–ª');
        return;
      }
      
      // 5. –ü—ñ–¥–≥–æ—Ç–æ–≤–∫–∞ payload –¥–ª—è processOrder
      const payload = {
        wordBuf: fileBuffer,
        outputPath: resultPath,
        excelPath: isOrder && excelPath ? excelPath : undefined,
        flags: {
          saveDBPath: false,
          is2BSP: is2BSP,
          isOrder: isOrder,
          tokens: false,
          autoOpen: autoOpen
        },
        mode: is2BSP ? '2BSP' : (isOrder ? 'order' : 'default')
      };
      
      // –û—á–∏—â—É—î–º–æ –ª–æ–≥–∏ –ø–µ—Ä–µ–¥ –ø–æ—á–∞—Ç–∫–æ–º –æ–±—Ä–æ–±–∫–∏
      uiLoggerService.clear();
      
      log('‚öôÔ∏è –û–±—Ä–æ–±–∫–∞ –Ω–∞–∫–∞–∑—É...');
      
      // 6. –í–∏–∫–ª–∏–∫ API
      const result = await window.api?.processOrder?.(payload);
      
      // 7. –û–±—Ä–æ–±–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—É
      if (result?.ok) {
        const stats = result.stats as { tokens?: number; paragraphs?: number; matched?: number; totalDocuments?: number } | undefined;
        log(`‚úÖ –ù–∞–∫–∞–∑ —É—Å–ø—ñ—à–Ω–æ –æ–±—Ä–æ–±–ª–µ–Ω–æ!`);
        
        // –ü–æ–∫–∞–∑–∞—Ç–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        if (stats?.totalDocuments) {
          log(`üìä –°—Ç–≤–æ—Ä–µ–Ω–æ –¥–æ–∫—É–º–µ–Ω—Ç—ñ–≤: ${stats.totalDocuments}`);
          log(`üìä –ó–Ω–∞–π–¥–µ–Ω–æ –∑–±—ñ–≥—ñ–≤: ${stats?.matched || 0}`);
        } else {
          log(`üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: –ø–∞—Ä–∞–≥—Ä–∞—Ñ—ñ–≤ - ${stats?.paragraphs || 0}, –∑–Ω–∞–π–¥–µ–Ω–æ - ${stats?.matched || 0}`);
        }
        
        if (result.out) {
          log(`üíæ –†–µ–∑—É–ª—å—Ç–∞—Ç –∑–±–µ—Ä–µ–∂–µ–Ω–æ: ${result.out}`);
        }
        
        // –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ —É—Å–ø—ñ—Ö
        const matchCount = stats?.matched || 0;
        await window.api?.notify?.('–£—Å–ø—ñ—Ö', `–ù–∞–∫–∞–∑ –æ–±—Ä–æ–±–ª–µ–Ω–æ! –ó–Ω–∞–π–¥–µ–Ω–æ –∑–±—ñ–≥—ñ–≤: ${matchCount}`);
        
        // –ê–≤—Ç–æ–≤—ñ–¥–∫—Ä–∏—Ç—Ç—è –≤–∂–µ —Ä–µ–∞–ª—ñ–∑–æ–≤–∞–Ω–µ –≤ electron/main.ts
        // –ù–µ –ø–æ—Ç—Ä—ñ–±–Ω–æ –≤–∏–∫–ª–∏–∫–∞—Ç–∏ openExternal —Ç—É—Ç
        
      } else {
        const errorMsg = result?.error || '–ù–µ–≤—ñ–¥–æ–º–∞ –ø–æ–º–∏–ª–∫–∞';
        log(`‚ùå –ü–æ–º–∏–ª–∫–∞ –æ–±—Ä–æ–±–∫–∏: ${errorMsg}`);
        await window.api?.notify?.('–ü–æ–º–∏–ª–∫–∞', errorMsg);
      }
      
    } catch (error) {
      log(`‚ùå –ö—Ä–∏—Ç–∏—á–Ω–∞ –ø–æ–º–∏–ª–∫–∞: ${error}`);
      console.error('–ü–æ–º–∏–ª–∫–∞ –æ–±—Ä–æ–±–∫–∏ –Ω–∞–∫–∞–∑—É:', error);
      await window.api?.notify?.('–ü–æ–º–∏–ª–∫–∞', `–ü–æ–º–∏–ª–∫–∞: ${error}`);
    }
  });

  // –ö–Ω–æ–ø–∫–∞ –¥–æ–¥–∞–≤–∞–Ω–Ω—è –Ω–æ—Ç–∞—Ç–∫–∏ (Notes)
  byId('btn-add-note')?.addEventListener('click', async () => {
    const noteInput = byId<HTMLTextAreaElement>('note-input');
    const notesList = byId('notes-list');
    
    if (!noteInput?.value?.trim()) {
      log('‚ö†Ô∏è –ù–æ—Ç–∞—Ç–∫–∞ –ø–æ—Ä–æ–∂–Ω—è');
      return;
    }
    
    // –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –µ–ª–µ–º–µ–Ω—Ç–∞ –Ω–æ—Ç–∞—Ç–∫–∏
    const noteItem = document.createElement('li');
    noteItem.textContent = noteInput.value;
    noteItem.style.cssText = 'padding: 8px; margin: 4px 0; background: var(--panel); border-radius: 4px;';
    
    // –î–æ–¥–∞–≤–∞–Ω–Ω—è –∫–Ω–æ–ø–∫–∏ –≤–∏–¥–∞–ª–µ–Ω–Ω—è
    const deleteBtn = document.createElement('button');
    deleteBtn.textContent = '‚úï';
    deleteBtn.className = 'btn ghost small';
    deleteBtn.style.cssText = 'margin-left: 8px; float: right;';
    deleteBtn.onclick = () => noteItem.remove();
    
    noteItem.appendChild(deleteBtn);
    notesList?.appendChild(noteItem);
    
    // –û—á–∏—â–µ–Ω–Ω—è –ø–æ–ª—è –≤–≤–æ–¥—É
    noteInput.value = '';
    log('üìù –ù–æ—Ç–∞—Ç–∫—É –¥–æ–¥–∞–Ω–æ');
  });

  // –ö–Ω–æ–ø–∫–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –æ–Ω–æ–≤–ª–µ–Ω—å
  byId('btn-check-updates')?.addEventListener('click', async () => {
    await updateManager.checkForUpdates();
  });

  log('üîó –ì–ª–æ–±–∞–ª—å–Ω—ñ event listeners –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω–æ');
}

/**
 * –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è file pickers
 * FIXED: –í–∏–∫–ª–∏–∫–∞—î utility –¥–ª—è file inputs
 */
function setupFilePickers(): void {
  initializeFilePickers();
  log('üìÅ File pickers —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ');
}

// === MAIN INITIALIZATION ===

/**
 * –ì–æ–ª–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó –¥–æ–¥–∞—Ç–∫—É
 * FIXED: –í–∏–∫–ª–∏–∫–∞—î—Ç—å—Å—è –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ DOM
 */
async function initializeApp(): Promise<void> {
  try {
    // –û—Ç—Ä–∏–º—É—î–º–æ –≤–µ—Ä—Å—ñ—é –∑ Electron
    const version = await (window as any).api?.invoke?.('updates:get-version') || '1.4.1';
    log(`üê∑ KontrNahryuk v${version} - –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è...`);

    // –í—ñ–¥–æ–±—Ä–∞–∂–∞—î–º–æ –≤–µ—Ä—Å—ñ—é –≤ UI
    const versionEl = byId('current-version');
    if (versionEl) versionEl.textContent = version;

    // 1. –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –º–µ–Ω–µ–¥–∂–µ—Ä—ñ–≤
    await initializeManagers();

    // 2. –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –æ—Å–Ω–æ–≤–Ω–∏—Ö –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å
    await loadSettings();
    setupSettingsAutoSave();

    // 3. –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –≥–ª–æ–±–∞–ª—å–Ω–∏—Ö –æ–±—Ä–æ–±–Ω–∏–∫—ñ–≤
    setupGlobalEventListeners();

    // 4. –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è file pickers
    setupFilePickers();

    log('‚úÖ KontrNahryuk –≥–æ—Ç–æ–≤–∏–π –¥–æ —Ä–æ–±–æ—Ç–∏!');
  } catch (error) {
    console.error('‚ùå –ö—Ä–∏—Ç–∏—á–Ω–∞ –ø–æ–º–∏–ª–∫–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó:', error);
  }
}

// === EVENT LISTENERS ===

// –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ DOM
document.addEventListener('DOMContentLoaded', () => {
  initializeApp();
});

// –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è —Ç–µ–º–∏ –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ window
window.addEventListener('load', async () => {
  // –ó–∞—Å—Ç–æ—Å—É–≤–∞–Ω–Ω—è —Ç–µ–º–∏
  const theme = await window.api?.getSetting?.('theme', 'system');
  themeService?.applyTheme(theme);
  
  log('üé® –¢–µ–º—É –∑–∞—Å—Ç–æ—Å–æ–≤–∞–Ω–æ –ø—Ä–∏ window.load');
});

// === EXPORTS (–¥–ª—è –º–æ–∂–ª–∏–≤–æ–≥–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –≤ —ñ–Ω—à–∏—Ö –º–æ–¥—É–ª—è—Ö) ===

// –ï–∫—Å–ø–æ—Ä—Ç—É—î–º–æ –¥–ª—è –¥–æ—Å—Ç—É–ø—É –∑ dev tools –∫–æ–Ω—Å–æ–ª—ñ –ø—ñ—Å–ª—è —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó
window.addEventListener('load', () => {
  (window as any).__managers = {
    section: sectionManager,
    source: sourceSelectionManager,
    batch: batchManager,
    update: updateManager,
    excel: excelProcessor,
    theme: themeService,
    settings: settingsManager,
    navigation: navigationService
  };

  console.log('üí° –î–æ—Å—Ç—É–ø –¥–æ –º–µ–Ω–µ–¥–∂–µ—Ä—ñ–≤ —á–µ—Ä–µ–∑ window.__managers');
});
