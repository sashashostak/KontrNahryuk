"""
–¢–µ—Å—Ç –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ ¬´–∑—Ä—ñ–∑—ñ–≤¬ª (Slice_Check)
"""

import sys
sys.path.insert(0, '.')

from excel_processor import ProcessingLog
from excel_slice_check import SliceIssue

print("üß™ === –¢–ï–°–¢ –ü–ï–†–ï–í–Ü–†–ö–ò ¬´–ó–†–Ü–ó–Ü–í¬ª (F/G) ===\n")

# –°—Ç–≤–æ—Ä—é—î–º–æ –ª–æ–≥
log = ProcessingLog()

# –î–æ–¥–∞—î–º–æ –∑–≤–∏—á–∞–π–Ω—ñ –æ–ø–µ—Ä–∞—Ü—ñ—ó
log.add_separator('–ö–û–ü–Ü–Æ–í–ê–ù–ù–Ø –î–ê–ù–ò–•')
log.add_entry(
    operation='–ö–æ–ø—ñ—é–≤–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö',
    source_file='1–ë—Ä–¢–ê_–°—ñ—á–µ–Ω—å.xlsx',
    sheet='1241',
    rows=45,
    details='–°–∫–æ–ø—ñ–π–æ–≤–∞–Ω–æ –∑ B4:F48'
)

# –¢–µ—Å—Ç–æ–≤—ñ –¥–∞–Ω—ñ –ø—Ä–æ–±–ª–µ–º –∑ ¬´–∑—Ä—ñ–∑–∞–º–∏¬ª
issues = [
    SliceIssue(subunit='1–†–°–ø–ü', row=45, fio='–Ü–≤–∞–Ω–æ–≤ –Ü–≤–∞–Ω –Ü–≤–∞–Ω–æ–≤–∏—á', pseudo='–Ü–≤–∞–Ω', val_f='–®', val_g='', reason='–£ F="–®", –∞–ª–µ G –ø–æ—Ä–æ–∂–Ω—è ‚Äî –ø–æ—Ç—Ä—ñ–±–µ–Ω ¬´–∑—Ä—ñ–∑¬ª'),
    SliceIssue(subunit='2–†–°–ø–ü', row=78, fio='–ü–µ—Ç—Ä–æ–≤ –ü–µ—Ç—Ä–æ –ü–µ—Ç—Ä–æ–≤–∏—á', pseudo='–ü–µ—Ç—Ä–æ', val_f='–í–õ–ö', val_g='', reason='–£ F="–í–õ–ö", –∞–ª–µ G –ø–æ—Ä–æ–∂–Ω—è ‚Äî –ø–æ—Ç—Ä—ñ–±–µ–Ω ¬´–∑—Ä—ñ–∑¬ª'),
    SliceIssue(subunit='–†–ú–¢–ó', row=123, fio='–°–∏–¥–æ—Ä–æ–≤ –°–∏–¥—ñ—Ä –°–∏–¥–æ—Ä–æ–≤–∏—á', pseudo='–°–∏–¥—ñ—Ä', val_f='–í–î', val_g='', reason='–£ F="–í–î", –∞–ª–µ G –ø–æ—Ä–æ–∂–Ω—è ‚Äî –ø–æ—Ç—Ä—ñ–±–µ–Ω ¬´–∑—Ä—ñ–∑¬ª'),
]

stats = {
    'total': 3
}

# –î–æ–¥–∞—î–º–æ –ø–µ—Ä–µ–≤—ñ—Ä–∫—É ¬´–∑—Ä—ñ–∑—ñ–≤¬ª –≤ LOG (—è–∫ —É –º–µ—Ç–æ–¥—ñ check_slices)
log.add_separator('–ü–ï–†–ï–í–Ü–†–ö–ê ¬´–ó–†–Ü–ó–Ü–í¬ª (F/G)')

log.add_entry(
    operation='–ó–Ω–∞–π–¥–µ–Ω–æ –ø—Ä–æ–±–ª–µ–º –∑ ¬´–∑—Ä—ñ–∑–∞–º–∏¬ª',
    source_file='–ó–°',
    sheet='',
    rows=stats['total'],
    details=f"–£ F —î —Ç–æ–∫–µ–Ω (–®/–í–õ–ö/–í–î), –∞–ª–µ G –ø–æ—Ä–æ–∂–Ω—è"
)

# –î–æ–¥–∞—î–º–æ –¥–µ—Ç–∞–ª—å–Ω—É —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –∫–æ–∂–Ω—É –ø—Ä–æ–±–ª–µ–º—É
for issue in issues:
    log.add_entry(
        operation='–ü—Ä–æ–±–ª–µ–º–∞ –∑ ¬´–∑—Ä—ñ–∑–æ–º¬ª',
        source_file=issue.subunit,   # –ö–æ–ª–æ–Ω–∫–∞ C LOG = –ö–æ–ª–æ–Ω–∫–∞ B –ó–° (–ø—ñ–¥—Ä–æ–∑–¥—ñ–ª)
        sheet=issue.fio,             # –ö–æ–ª–æ–Ω–∫–∞ D LOG = –ö–æ–ª–æ–Ω–∫–∞ D –ó–° (–ü–Ü–ë)
        rows='',
        details=f"–ü—Å–µ–≤–¥–æ: {issue.pseudo} | –†—è–¥–æ–∫ {issue.row} | F={issue.val_f} | G=–ø–æ—Ä–æ–∂–Ω—å–æ"
    )

# –ü–æ–∫–∞–∑—É—î–º–æ —Å—Ç—Ä—É–∫—Ç—É—Ä—É LOG
print("üìã –°—Ç—Ä—É–∫—Ç—É—Ä–∞ LOG:\n")
print("=" * 110)
print(f"{'‚Ññ':<5} {'–û–ø–µ—Ä–∞—Ü—ñ—è':<30} {'–§–∞–π–ª':<25} {'–ü—ñ–¥—Ä–æ–∑–¥—ñ–ª':<12} {'–†—è–¥–∫—ñ–≤':<8} {'–î–µ—Ç–∞–ª—ñ':<50}")
print("=" * 110)

entry_number = 0
for entry in log.entries:
    if entry.get('is_separator', False):
        print(f"\n{'':5} {entry['operation']}")
        print("-" * 110)
    else:
        entry_number += 1
        details_short = entry['details'][:60] if len(entry['details']) > 60 else entry['details']
        print(f"{entry_number:<5} {entry['operation']:<30} {entry['source_file']:<25} {entry['sheet']:<12} {str(entry['rows']):<8} {details_short:<50}")

print("\n" + "=" * 110)

# –ü—ñ–¥—Å—É–º–æ–∫
summary = log.get_summary()
print(f"\nüìä –ü—ñ–¥—Å—É–º–æ–∫:")
print(f"   –í—Å—å–æ–≥–æ –æ–ø–µ—Ä–∞—Ü—ñ–π: {summary['operations']}")
print(f"   –í—Å—å–æ–≥–æ —Ñ–∞–π–ª—ñ–≤: {summary['files_processed']}")
print(f"   –í—Å—å–æ–≥–æ —Ä—è–¥–∫—ñ–≤: {summary['total_rows']}")
print(f"   –ß–∞—Å –æ–±—Ä–æ–±–∫–∏: {summary['duration']:.2f} —Å–µ–∫")

print("\n‚úÖ –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ ¬´–∑—Ä—ñ–∑—ñ–≤¬ª —ñ–Ω—Ç–µ–≥—Ä–æ–≤–∞–Ω–∞ –≤ LOG –ø—ñ–¥ —Ä–æ–∑–¥—ñ–ª—é–≤–∞—á–µ–º '‚ïê‚ïê‚ïê –ü–ï–†–ï–í–Ü–†–ö–ê ¬´–ó–†–Ü–ó–Ü–í¬ª (F/G) ‚ïê‚ïê‚ïê'")
print("üìå –¢–æ–∫–µ–Ω–∏: –®, –í–õ–ö, –í–î")
print("üìå –ü—Ä–∞–≤–∏–ª–æ: –Ø–∫—â–æ —É F —î —Ç–æ–∫–µ–Ω, —Ç–æ G –º–∞—î –±—É—Ç–∏ –∑–∞–ø–æ–≤–Ω–µ–Ω–∞")
