"""
Утиліти для роботи з текстом
Єдина точка нормалізації для всіх модулів
"""


def replace_latin_to_cyrillic(text: str) -> str:
    """
    Замінює латинські літери на кирилічні

    Проблема: При копіюванні/введенні ПІБ часто латинські літери потрапляють замість кирилічних
    Наприклад: "IВАНОВ" (латинська I) vs "ІВАНОВ" (кирилічна І)

    Args:
        text: Текст для обробки

    Returns:
        Текст з кирилічними літерами

    Замінювані літери (латинська → кирилічна):
        A/a → А/а, B/b → В/в, E/e → Е/е, K/k → К/к, M/m → М/м,
        H/h → Н/н, O/o → О/о, P/p → Р/р, C/c → С/с, T/t → Т/т,
        X/x → Х/х, I/i → І/і
    """
    replacements = {
        # Латинська → Кирилічна (великі)
        'A': 'А', 'B': 'В', 'E': 'Е', 'K': 'К', 'M': 'М', 'H': 'Н',
        'O': 'О', 'P': 'Р', 'C': 'С', 'T': 'Т', 'X': 'Х', 'I': 'І',
        # Латинська → Кирилічна (малі)
        'a': 'а', 'b': 'в', 'e': 'е', 'k': 'к', 'm': 'м', 'h': 'н',
        'o': 'о', 'p': 'р', 'c': 'с', 't': 'т', 'x': 'х', 'i': 'і',
    }

    for latin, cyrillic in replacements.items():
        text = text.replace(latin, cyrillic)

    return text


def normalize_text(value, remove_spaces: bool = True, case: str = 'lower') -> str:
    """
    Нормалізувати текст для порівняння

    Args:
        value: Значення для нормалізації (може бути str, int, float, None)
        remove_spaces: Чи видаляти пробіли (за замовчуванням True)
        case: Регістр результату - 'lower', 'upper', або None (залишити як є)

    Returns:
        Нормалізований текст

    Правила нормалізації:
    1. Конвертація None та порожніх значень у ""
    2. Конвертація у строку
    3. Заміна NBSP (U+00A0) на звичайний пробіл
    4. Видалення пробілів на початку та в кінці
    5. Заміна множинних пробілів на один
    6. Заміна латинських літер на кирилічні (A→А, E→Е, I→І, тощо)
    7. Конвертація регістру (за параметром case)
    8. Опціонально: видалення всіх пробілів
    """
    if value is None or value == "":
        return ""

    # Конвертуємо у строку
    s = str(value)

    # NBSP -> звичайний пробіл
    s = s.replace('\u00A0', ' ')

    # Видаляємо пробіли на початку/кінці
    s = s.strip()

    # Множинні пробіли -> один пробіл
    while '  ' in s:
        s = s.replace('  ', ' ')

    # Заміна латинських літер на кирилічні
    s = replace_latin_to_cyrillic(s)

    # Конвертація регістру
    if case == 'lower':
        s = s.lower()
    elif case == 'upper':
        s = s.upper()
    # Якщо case == None, залишаємо як є

    # Опціонально видаляємо всі пробіли
    if remove_spaces:
        s = s.replace(' ', '')

    return s


def normalize_list(values: list, remove_spaces: bool = True) -> list:
    """
    Нормалізувати список значень

    Args:
        values: Список значень для нормалізації
        remove_spaces: Чи видаляти пробіли

    Returns:
        Список нормалізованих значень
    """
    return [normalize_text(v, remove_spaces) for v in values]
